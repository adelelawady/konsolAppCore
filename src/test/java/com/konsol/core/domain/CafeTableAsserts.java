package com.konsol.core.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CafeTableAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCafeTableAllPropertiesEquals(CafeTable expected, CafeTable actual) {
        assertCafeTableAutoGeneratedPropertiesEquals(expected, actual);
        assertCafeTableAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCafeTableAllUpdatablePropertiesEquals(CafeTable expected, CafeTable actual) {
        assertCafeTableUpdatableFieldsEquals(expected, actual);
        assertCafeTableUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCafeTableAutoGeneratedPropertiesEquals(CafeTable expected, CafeTable actual) {
        assertThat(expected)
            .as("Verify CafeTable auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCafeTableUpdatableFieldsEquals(CafeTable expected, CafeTable actual) {
        assertThat(expected)
            .as("Verify CafeTable relevant properties")
            .satisfies(e -> assertThat(e.getPk()).as("check pk").isEqualTo(actual.getPk()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getIndex()).as("check index").isEqualTo(actual.getIndex()))
            .satisfies(e -> assertThat(e.getActive()).as("check active").isEqualTo(actual.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCafeTableUpdatableRelationshipsEquals(CafeTable expected, CafeTable actual) {
        // empty method
    }
}
