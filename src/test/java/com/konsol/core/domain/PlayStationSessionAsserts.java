package com.konsol.core.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlayStationSessionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlayStationSessionAllPropertiesEquals(PlayStationSession expected, PlayStationSession actual) {
        assertPlayStationSessionAutoGeneratedPropertiesEquals(expected, actual);
        assertPlayStationSessionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlayStationSessionAllUpdatablePropertiesEquals(PlayStationSession expected, PlayStationSession actual) {
        assertPlayStationSessionUpdatableFieldsEquals(expected, actual);
        assertPlayStationSessionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlayStationSessionAutoGeneratedPropertiesEquals(PlayStationSession expected, PlayStationSession actual) {
        assertThat(expected)
            .as("Verify PlayStationSession auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlayStationSessionUpdatableFieldsEquals(PlayStationSession expected, PlayStationSession actual) {
        assertThat(expected)
            .as("Verify PlayStationSession relevant properties")
            .satisfies(e -> assertThat(e.getActive()).as("check active").isEqualTo(actual.getActive()))
            .satisfies(e -> assertThat(e.getStartTime()).as("check startTime").isEqualTo(actual.getStartTime()))
            .satisfies(e -> assertThat(e.getEndTime()).as("check endTime").isEqualTo(actual.getEndTime()))
            .satisfies(e -> assertThat(e.getInvoiceId()).as("check invoiceId").isEqualTo(actual.getInvoiceId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlayStationSessionUpdatableRelationshipsEquals(PlayStationSession expected, PlayStationSession actual) {
        // empty method
    }
}
