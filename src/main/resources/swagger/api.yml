openapi: 3.0.1
info:
  title: Konsol Core API
  description: Konsol Core API documentation
  termsOfService: ''
  contact:
    url: 'https://github.com/adelelawady'
    name: ADEL ALI (KONSOL)
    email: adel50ali50@gmail.com
  license:
    name: 'APACHE LICENSE, VERSION 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  version: 0.0.1
servers:
  - url: 'http://localhost:8080/api'
    description: Generated server url
paths:
  '/stores/{id}':
    get:
      tags:
        - store-resource
      operationId: getStore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreDTO'
    delete:
      tags:
        - store-resource
      operationId: deleteStore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - store-resource
      operationId: updateStore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StoreDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/monies/{id}':
    get:
      tags:
        - money-resource
      operationId: getMoney
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyDTO'
    delete:
      tags:
        - money-resource
      operationId: deleteMoney
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - money-resource
      operationId: updateMoney
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MoneyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/items/{id}':
    get:
      tags:
        - item-resource
      operationId: getItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
      summary: ''
    put:
      tags:
        - item-resource
      operationId: updateItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    delete:
      tags:
        - item-resource
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - item-resource
      operationId: partialUpdateItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/invoices/{id}':
    get:
      tags:
        - invoice-resource
      operationId: getInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
      description: 'get single invoice by id '
    delete:
      tags:
        - invoice-resource
      operationId: deleteInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      description: delete invoice by invoice id
    patch:
      tags:
        - invoice-resource
      operationId: updateInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdateDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/InvoiceDTO'
        required: true
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewSimpleDTO'
      description: 'update invoice '
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: save and submit invoice
      operationId: saveInvoice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewSimpleDTO'
      tags:
        - invoice-resource
      description: |
        save and submit invoice by invoice id 
        changes invoice status to active
  '/invoices/view/{id}':
    get:
      tags:
        - invoice-resource
      operationId: getInvoiceView
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewDTO'
      description: 'get single invoice by id '
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/banks/{id}':
    get:
      tags:
        - bank-resource
      operationId: getBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    delete:
      tags:
        - bank-resource
      operationId: deleteBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - bank-resource
      operationId: updateBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/BankDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/account-user/{id}':
    get:
      tags:
        - account-user-resource
      operationId: getAccountUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserDTO'
    delete:
      tags:
        - account-user-resource
      operationId: deleteAccountUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - account-user-resource
      operationId: updateAccountUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AccountUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/account-user/{id}/transactions':
    post:
      tags:
        - account-user-resource
      operationId: processAccountTransactions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransactionsContainer'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /account-user:
    get:
      tags:
        - account-user-resource
      operationId: getAllAccountUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountUserDTO'
    post:
      tags:
        - account-user-resource
      operationId: createAccountUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserDTO'
    parameters: []
  /account-user/view:
    post:
      tags:
        - account-user-resource
      operationId: searchAccountUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserSearchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserContainer'
      summary: SearchAccountUsers
      description: 'search in all account users using all fields available '
    parameters: []
  /stores:
    get:
      tags:
        - store-resource
      operationId: getAllStores
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreDTO'
    post:
      tags:
        - store-resource
      operationId: createStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreDTO'
    parameters: []
  /stores/names:
    get:
      tags:
        - store-resource
      operationId: getAllStoresNames
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreNameDTO'
      description: 'return all store names with id '
    parameters: []
  /stores/storeItems:
    parameters: []
    post:
      summary: ''
      operationId: SetStoreItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreItemDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreItemIdOnlyDTO'
        description: store item contains item.id and store.id and qty required
      tags:
        - store-resource
      description: |-
        creates if not exsits or updates exsitsing store item 
        for selected item and store
  '/stores/item/{id}/storeItems':
    get:
      tags:
        - store-resource
      operationId: getAllStoresItemsForItem
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreItemDTO'
      description: return all store items qty in all stores item availabe in with item id
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/stores/item/{id}/storeItems/all':
    get:
      tags:
        - store-resource
      operationId: getAllStoresItemsInAllStoresForItem
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreItemDTO'
      description: return all store items qty in all stores with item id
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/stores/{id}/storeItems':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: getStoresItemsForStore
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreItemDTO'
      tags:
        - store-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
      description: return store items for store by store id
  /monies:
    get:
      tags:
        - money-resource
      operationId: getAllMonies
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoneyDTO'
    post:
      tags:
        - money-resource
      operationId: createMoney
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMoneyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyDTO'
    parameters: []
  /monies/view:
    post:
      operationId: MoniesViewSearchPaginate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoniesSearchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoniesViewDTOContainer'
      description: invoice view dto search and pagination and sort request
      summary: 'Search Monies [ pagination , time , plaintext , sort ] { view model dto }'
      parameters: []
      tags:
        - money-resource
    parameters: []
  /items:
    get:
      tags:
        - item-resource
      operationId: getAllItems
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemDTO'
    post:
      tags:
        - item-resource
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters: []
  '/items/{id}/units':
    get:
      tags:
        - item-resource
      operationId: getItemUnits
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemUnitDTO'
      description: get all item units available
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/items/units/{id}/delete':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: ''
      operationId: deleteUnitItemById
      responses:
        '200':
          description: OK
      tags:
        - item-resource
  /items/view:
    parameters: []
    post:
      summary: ''
      operationId: ItemsViewSearchPaginate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemViewDTOContainer'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
        description: ''
      description: item view dto search and pagination and sort request
      tags:
        - item-resource
  /items/categories:
    get:
      tags:
        - item-resource
      operationId: getAllItemsCategories
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryItem'
      description: 'get categories from all items available '
    parameters: []
  '/items/categories/{containerId}/view':
    parameters:
      - schema:
          type: string
        name: containerId
        in: path
        required: true
    post:
      summary: ''
      operationId: getAllItemsByCategoryAndContainerIdPrice
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemSimpleDTO'
      tags:
        - item-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryItem'
  /items/category/listItems:
    parameters: []
    post:
      summary: ''
      operationId: getItemsByCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemSimpleDTO'
      tags:
        - item-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryItem'
  '/items/pk/{PkId}':
    get:
      tags:
        - item-resource
      operationId: getItemByPk
      parameters: []
      description: 'get item by pk id '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: PkId
        in: path
        required: true
  '/items/id/{id}/before':
    get:
      tags:
        - item-resource
      operationId: getItemBeforeItemById
      parameters: []
      description: get the item before this item by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/items/id/{id}/after':
    get:
      tags:
        - item-resource
      operationId: getItemAfterItemById
      parameters: []
      description: get the item before this item by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /invoices:
    get:
      tags:
        - invoice-resource
      operationId: getAllInvoices
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceDTO'
    post:
      tags:
        - invoice-resource
      operationId: createInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
    parameters: []
  '/invoices/{id}/invoiceItems':
    get:
      tags:
        - invoice-resource
      operationId: getInvoiceItems
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /invoices/view:
    post:
      tags:
        - invoice-resource
      operationId: InvoicesViewSearchPaginate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicesSearchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewDTOContainer'
      description: invoice view dto search and pagination and sort request
      summary: 'Search Invoices [ pagination , time , plaintext , sort ] { view model dto }'
      parameters: []
    parameters: []
  '/invoices/{kind}/create':
    get:
      tags:
        - invoice-resource
      operationId: initializeNewInvoice
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
      description: initialize a new Invoice
    parameters:
      - schema:
          type: string
        name: kind
        in: path
        required: true
  '/invoices/{id}/print':
    get:
      tags:
        - invoice-resource
      operationId: getPrintInvoiceObject
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePrintDTO'
      description: create a printable object of invoice print dto and global options used for user and general info
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/invoices/{id}/add':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: add invoice item to invocie
      operationId: AddInvoiceItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
      tags:
        - invoice-resource
      description: add item to invoice includes price qty etc ..
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceItemDTO'
  '/invoices/invoice-items/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: ''
      operationId: deleteInvoiceItemFromInvoice
      responses:
        '200':
          description: OK
      tags:
        - invoice-resource
      description: ''
    patch:
      summary: ''
      operationId: updateInvoiceItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItemViewDTO'
              examples:
                example-1:
                  value:
                    pk: string
                    id: string
                    unit: string
                    unitQtyIn: 0
                    unitQtyOut: 0
                    discount: 0
                    discountPer: 0
                    totalCost: 0
                    totalPrice: 0
                    qtyIn: 0
                    qtyOut: 0
                    netCost: 0
                    netPrice: 0
                    itemName: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItemUpdateDTO'
            examples:
              example-1:
                value:
                  id: string
                  unitPieces: 0
                  unitQty: 0
                  unitCost: 0
                  unitPrice: 0
                  discountPer: 0
                  discount: 0
                  qty: 0
                  cost: 0
                  price: 0
      description: update invoices invoice item
      tags:
        - invoice-resource
  /banks:
    get:
      tags:
        - bank-resource
      operationId: getAllBanks
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankDTO'
    post:
      tags:
        - bank-resource
      operationId: createBank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    parameters: []
  /register:
    post:
      tags:
        - account-resource
      operationId: registerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserVM'
        required: true
      responses:
        '201':
          description: Created
    parameters: []
  /admin/users:
    get:
      tags:
        - user-resource
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUserDTO'
    put:
      tags:
        - user-resource
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    post:
      tags:
        - user-resource
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    parameters: []
  /authenticate:
    get:
      tags:
        - account-resource
      operationId: isAuthenticated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - user-jwt-controller
      operationId: authorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginVM'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTToken'
    parameters: []
  /account:
    get:
      tags:
        - account-resource
      operationId: getAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    post:
      tags:
        - account-resource
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /account/reset-password/init:
    post:
      tags:
        - account-resource
      operationId: requestPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /account/reset-password/finish:
    post:
      tags:
        - account-resource
      operationId: finishPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyAndPasswordVM'
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /account/change-password:
    post:
      tags:
        - account-resource
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /users:
    get:
      tags:
        - public-user-resource
      operationId: getAllPublicUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
    parameters: []
  /authorities:
    get:
      tags:
        - public-user-resource
      operationId: getAuthorities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorityDTO'
    parameters: []
  '/admin/users/{login}':
    get:
      tags:
        - user-resource
      operationId: getUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    delete:
      tags:
        - user-resource
      operationId: deleteUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    parameters:
      - schema:
          type: string
        name: login
        in: path
        required: true
  /activate:
    get:
      tags:
        - account-resource
      operationId: activateAccount
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    parameters: []
  /sys/settings:
    get:
      summary: Get System Options
      tags:
        - GLOBAL
        - server_settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSettings'
      operationId: getServerSettings
      description: 'get main system invoices , handlers ,  pos global options file '
    patch:
      summary: Update Global Application options
      operationId: updateServerSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSettings'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSettings'
      description: Update Global Application options
      tags:
        - GLOBAL
        - server_settings
    parameters: []
  '/banks/{id}/transactions':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: getBankTransactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransactionsContainer'
      tags:
        - bank-resource
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
        description: ''
  '/banks/{id}/analysis':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - bank-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankBalanceDTO'
      operationId: getBankAnalysis
  '/items/{id}/analysis':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: getItemsAnalysis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAnalysisDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAnalysisSearchDTO'
      tags:
        - item-resource
      description: 'get all item analysis by store , or dates '
  '/items/{id}/charts':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: getItemCharts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartDataContainer'
      tags:
        - item-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartSearchDTO'
        description: ''
  /financial/dashboard:
    post:
      summary: ''
      operationId: getFinancialDashboard
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialDashboardDTO'
      tags:
        - financial-reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialSearchDTO'
  /financial/playstation/dashboard:
    post:
      summary: ''
      operationId: getPlaystationFinancialDashboard
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialDashboardDTO'
      tags:
        - financial-reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialSearchDTO'
    parameters: []
  /playstation/device:
    get:
      summary: get all playstation devices
      tags:
        - playstation-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsDeviceDTO'
      operationId: getDevices
      description: 'get all playstation devices '
    post:
      summary: ''
      operationId: createPlayStationDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
  /playstation/device/category:
    post:
      summary: ''
      operationId: getDevicesByCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsDeviceDTO'
      description: get all devices by category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryItem'
        description: get all devices by category
      tags:
        - playstation-resource
    parameters: []
    get:
      summary: ''
      operationId: getDevicesCategories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryItem'
      tags:
        - playstation-resource
  '/playstation/device/{id}/orders':
    post:
      summary: ''
      operationId: addOrderToDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceItemDTO'
      tags:
        - playstation-resource
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/playstation/device/{id}/move/{deviceId}':
    post:
      summary: ''
      operationId: moveDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      description: ''
      tags:
        - playstation-resource
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
  '/playstation/device/{id}/session/updateType/{typeId}':
    post:
      summary: ''
      operationId: updateDeviceSessionType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: typeId
        in: path
        required: true
  '/playstation/device/{id}/orders/{orderId}':
    post:
      summary: ''
      operationId: updateDeviceOrder
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItemUpdateDTO'
      tags:
        - playstation-resource
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: orderId
        in: path
        required: true
    delete:
      summary: ''
      operationId: deleteDeviceOrder
      responses:
        '200':
          description: OK
      tags:
        - playstation-resource
  /playstation/device/type:
    get:
      summary: get all playstation devices types
      tags:
        - playstation-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsDeviceType'
      operationId: getDevicesTypes
      description: get all playstation devices types
    post:
      summary: ''
      operationId: createPlayStationDeviceType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceType'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceType'
      tags:
        - playstation-resource
    parameters: []
  /playstation/session:
    post:
      summary: ''
      operationId: getSessions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsSessionDTO'
      description: get all playstation devices sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
        description: ''
      tags:
        - playstation-resource
    parameters: []
  '/playstation/session/{containerId}/view':
    parameters:
      - schema:
          type: string
        name: containerId
        in: path
        required: true
    post:
      summary: ''
      operationId: getSessionsByContainerId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsSessionDTO'
      description: get all playstation devices sessions by the container
      tags:
        - playstation-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
  '/playstation/device/{id}':
    get:
      summary: get all playstation devices
      tags:
        - playstation-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      operationId: getDevice
      description: 'get all playstation devices '
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ''
      operationId: updateDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceDTO'
        description: ''
      tags:
        - playstation-resource
    patch:
      summary: ''
      operationId: partialUpdateDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
    delete:
      summary: ''
      operationId: deleteDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
  '/playstation/session/{id}':
    get:
      summary: get all playstation devices
      tags:
        - playstation-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsSessionDTO'
      operationId: getSession
      description: get playstation session
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ''
      operationId: updateSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsSessionDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsSessionDTO'
        description: ''
      tags:
        - playstation-resource
    patch:
      summary: ''
      operationId: partialUpdateSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsSessionDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsSessionDTO'
      tags:
        - playstation-resource
    delete:
      summary: ''
      operationId: deleteSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsSessionDTO'
      tags:
        - playstation-resource
  '/playstation/session/{id}/print':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: printSession
      responses:
        '200':
          description: OK
      tags:
        - playstation-resource
  '/playstation/device/{id}/session/start':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Start Device Session
      operationId: startDeviceSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
      description: Start Device Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDeviceSessionDTO'
  '/playstation/device/{id}/session/stop':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Stop Device Session
      operationId: stopDeviceSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
      description: Stop Device Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaystationEndSessionDTO'
  '/playstation/device/{id}/session/invoice/update':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Update Device Session Invoice
      operationId: updateSessionInvoice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
      description: Update Device Session Invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdateDTO'
  '/playstation/device/type/{id}':
    get:
      summary: get all playstation devices
      tags:
        - playstation-resource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceType'
      operationId: getDeviceType
      description: get playstation device type
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ''
      operationId: updateDeviceType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceType'
        description: ''
      tags:
        - playstation-resource
    patch:
      summary: ''
      operationId: partialUpdateDeviceType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsDeviceType'
      tags:
        - playstation-resource
    delete:
      summary: ''
      operationId: deleteDeviceType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceType'
      tags:
        - playstation-resource
  /playstation-containers:
    post:
      summary: Create a new PlaystationContainer
      description: Creates a new PlaystationContainer if it does not already have an ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaystationContainer'
      responses:
        '201':
          description: Successfully created PlaystationContainer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaystationContainer'
        '400':
          description: Invalid input or ID already exists
      tags:
        - playstation-container-resource
      operationId: createPlaystationContainer
    get:
      summary: Get all PlaystationContainers
      description: Retrieves a paginated list of all PlaystationContainers.
      parameters:
        - name: page
          in: query
          description: The page number.
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: The size of each page.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved list of PlaystationContainers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaystationContainer'
      tags:
        - playstation-container-resource
      operationId: getPlaystationContainers
    parameters: []
  '/playstation-containers/{id}':
    get:
      summary: Get a PlaystationContainer by ID
      description: Retrieves a single PlaystationContainer by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved PlaystationContainer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaystationContainer'
        '404':
          description: PlaystationContainer not found
      tags:
        - playstation-container-resource
      operationId: getPlaystationContainer
    put:
      summary: Update a PlaystationContainer
      description: Updates an existing PlaystationContainer by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaystationContainer'
      responses:
        '200':
          description: Successfully updated PlaystationContainer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaystationContainer'
        '400':
          description: Invalid ID or data
        '404':
          description: PlaystationContainer not found
      tags:
        - playstation-container-resource
      operationId: updatePlaystationContainer
    patch:
      summary: Partially update a PlaystationContainer
      description: Updates specific fields of a PlaystationContainer.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaystationContainer'
      responses:
        '200':
          description: Successfully updated PlaystationContainer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaystationContainer'
        '400':
          description: Invalid ID or data
        '404':
          description: PlaystationContainer not found
      tags:
        - playstation-container-resource
      operationId: partialUpdatePlaystationContainer
    delete:
      summary: Delete a PlaystationContainer
      description: Deletes an existing PlaystationContainer by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted PlaystationContainer
        '404':
          description: PlaystationContainer not found
      tags:
        - playstation-container-resource
      operationId: deletePlaystationContainer
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /shefts:
    post:
      summary: Create a new Sheft
      operationId: createSheft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SheftDTO'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
        '400':
          description: Bad Request
      tags:
        - sheft-resource
    get:
      summary: Get all Shefts
      operationId: getAllShefts
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: Page size for pagination
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SheftDTO'
      tags:
        - sheft-resource
    parameters: []
  '/shefts/{id}':
    get:
      summary: Get a Sheft by ID
      operationId: getSheft
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
        '404':
          description: Not Found
      tags:
        - sheft-resource
    put:
      summary: Update a Sheft
      operationId: updateSheft
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SheftDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
        '400':
          description: Bad Request
        '404':
          description: Not Found
      tags:
        - sheft-resource
    patch:
      summary: Partially update a Sheft
      operationId: partialUpdateSheft
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SheftDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
        '400':
          description: Bad Request
        '404':
          description: Not Found
      tags:
        - sheft-resource
    delete:
      summary: Delete a Sheft
      operationId: deleteSheft
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
      tags:
        - sheft-resource
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /shefts/current/active:
    parameters: []
    post:
      summary: ''
      operationId: stopActiveSheft
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
      tags:
        - sheft-resource
      parameters:
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: print
    get:
      summary: ''
      operationId: getActiveSheft
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
      tags:
        - sheft-resource
    put:
      summary: ''
      operationId: startSheft
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheftDTO'
      tags:
        - sheft-resource
  /shefts/current/active/sessions:
    parameters: []
    get:
      summary: ''
      operationId: getActiveSheftSessions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsSessionDTO'
      tags:
        - sheft-resource
  /sys/settings/backup:
    post:
      summary: Perform manual backup
      operationId: performBackup
      tags:
        - GLOBAL
        - server_settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: 'Returns true if backup was successful, false otherwise'
      description: Initiates a manual backup of the system using current backup settings
  /sys/settings/restore:
    post:
      summary: Restore system from backup
      operationId: performRestore
      tags:
        - GLOBAL
        - server_settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                backupPath:
                  type: string
                  description: Full path to the backup directory to restore from
              required:
                - backupPath
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: 'Returns true if restore was successful, false otherwise'
        '400':
          description: Bad Request - Invalid backup path or backup not found
        '500':
          description: Internal Server Error - Restore operation failed
      description: Restores the system from a specified backup directory
  '/playstation/device/{id}/type/{typeId}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the device to update
      - schema:
          type: string
        name: typeId
        in: path
        required: true
        description: ID of the new device type
    post:
      summary: Update device type
      operationId: changeDeviceType
      parameters:
        - name: updateSession
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Whether to update the type on active session as well
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsDeviceDTO'
      tags:
        - playstation-resource
      description: Updates the device type and optionally updates the active session type
  /sys/license:
    post:
      summary: Process super admin license key
      description: Processes an encrypted license key to generate a new license
      tags:
        - GLOBAL
        - server_settings
      operationId: processSuperAdminLicense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptedKey:
                  type: string
                  description: RSA encrypted license key containing license details
              required:
                - encryptedKey
      responses:
        '200':
          description: License successfully processed and generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDTO'
        '400':
          description: Invalid license key or processing failed
        '401':
          description: Unauthorized - insufficient permissions
        '500':
          description: Internal server error during license processing
  /public/sys/license:
    post:
      summary: Process super admin license key
      description: Processes an encrypted license key to generate a new license
      tags:
        - GLOBAL
        - server_settings
        - public-resource
      operationId: processLicensePublic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptedKey:
                  type: string
                  description: RSA encrypted license key containing license details
              required:
                - encryptedKey
      responses:
        '200':
          description: License successfully processed and generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDTO'
        '400':
          description: Invalid license key or processing failed
        '401':
          description: Unauthorized - insufficient permissions
        '500':
          description: Internal server error during license processing
    parameters: []
    get:
      summary: ''
      operationId: validateLicensePublic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      tags:
        - public-resource
  /public/sys/user/license:
    parameters: []
    get:
      summary: ''
      operationId: getUserLicense
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDTO'
      tags:
        - public-resource
  /sys/license/generate:
    post:
      summary: Generate encrypted admin license key
      description: Generates an encrypted admin license key for testing purposes (development only)
      tags:
        - GLOBAL
        - server_settings
      operationId: generateAdminLicenseKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: Client identifier for the license
                expiryDate:
                  type: string
                  format: date-time
                  description: License expiration date and time
              required:
                - clientId
                - expiryDate
      responses:
        '200':
          description: Encrypted admin key generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  encryptedKey:
                    type: string
                    description: The generated encrypted license key
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized - insufficient permissions
        '500':
          description: Internal server error during key generation
components:
  schemas:
    ChartDataDTO:
      type: object
      x-stoplight:
        id: f1ee0f5cd5909
      properties:
        date:
          type: string
          format: date
          description: Date in day/month/year format (التاريخ (يوم/شهر/سنة)).
        totalSales:
          type: number
          format: double
          description: Total sales (إجمالي المبيعات).
          default: 0
        totalQty:
          type: number
          format: double
          description: Total quantity sold (إجمالي الكمية المباعة).
          default: 0
        avgPrice:
          type: number
          format: double
          description: Average price (متوسط السعر).
          default: 0
    ItemAnalysisDTO:
      type: object
      properties:
        totalSales:
          type: number
          format: double
          description: Total gross sales (إجمالي المبيعات الإجمالية).
          default: 0
        netSales:
          type: number
          format: double
          description: Total net sales (إجمالي المبيعات الصافية).
          default: 0
        totalCost:
          type: number
          format: double
          description: Total gross cost (إجمالي التكلفة الإجمالية).
          default: 0
        netCost:
          type: number
          format: double
          description: Total net cost (إجمالي التكلفة الصافية).
          default: 0
        totalProfit:
          type: number
          format: double
          description: Total profits (إجمالي الأرباح).
          default: 0
        totalDiscount:
          type: number
          format: double
          description: Total discounts (إجمالي الخصومات).
          default: 0
        totalQtyOut:
          type: number
          format: double
          description: Total quantity sold (إجمالي الكمية المباعة).
          default: 0
        totalQtyIn:
          type: number
          format: double
          description: Total quantity purchased (إجمالي الكمية المشتراة).
          default: 0
    BankTransactionsDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the transaction.
        pk:
          type: string
          description: Primary key.
        bankId:
          type: string
          description: Identifier for the associated bank.
        sourceType:
          type: string
          description: 'Type of the source, e.g., "INVOICE" or "MONEY".'
        sourceKind:
          type: string
          description: Kind of the source.
        sourceId:
          type: string
          description: Identifier for the source.
        sourcePk:
          type: string
          description: Primary key of the source.
        moneyIn:
          type: number
          format: double
          description: Amount of money coming in.
          default: 0
        moneyOut:
          type: number
          format: double
          description: Amount of money going out.
          default: 0
        details:
          type: string
          description: Additional details about the transaction.
        createdDate:
          type: string
          format: date-time
          description: The date and time when the transaction was created.
        accountId:
          type: string
          description: Identifier for the associated account.
        accountName:
          type: string
          description: Name of the associated account.
    BankBalanceDTO:
      type: object
      properties:
        totalSalesProfits:
          type: number
          format: double
          description: Total sales profits.
          default: 0
        grossRevenue:
          type: number
          format: double
          description: Gross revenue (الإيرادات الإجمالية قبل الخصم).
          default: 0
        netRevenue:
          type: number
          format: double
          description: Net revenue (الإيرادات الصافية بعد الخصم).
          default: 0
        totalCost:
          type: number
          format: double
          description: Total cost of purchases (التكلفة الإجمالية للمشتريات).
          default: 0
        totalDiscounts:
          type: number
          format: double
          description: Total discounts offered (إجمالي الخصومات المقدمة).
          default: 0
        totalAdditions:
          type: number
          format: double
          description: Total additions (إجمالي الإضافات).
          default: 0
        totalBalance:
          type: number
          format: double
          description: Total balance.
          default: 0
        moneyInFromMoney:
          type: number
          format: double
          description: Money in from money.
          default: 0
        moneyOutFromMoney:
          type: number
          format: double
          description: Money out from money.
          default: 0
    ItemDTO:
      type: object
      x-tags:
        - item
      properties:
        id:
          type: string
        pk:
          type: integer
          default: -1
        name:
          type: string
        barcode:
          type: string
        price1:
          type: string
        price2:
          type: string
        category:
          type: string
        qty:
          type: number
          exclusiveMinimum: false
          default: 0
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        itemUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ItemUnitDTO'
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        checkQty:
          type: boolean
          x-stoplight:
            id: tpadizn2r7ikw
          default: false
        PriceOptions:
          type: array
          x-stoplight:
            id: 0tjx7m0g6od4z
          items:
            $ref: '#/components/schemas/itemPriceOptionDTO'
      required:
        - name
    ItemSimpleDTO:
      type: object
      x-tags:
        - item
      title: itemSimpleDTO
      description: 'simple model details for item '
      properties:
        id:
          type: string
        pk:
          type: integer
          default: -1
        name:
          type: string
        price1:
          type: string
        category:
          type: string
        qty:
          type: number
          exclusiveMinimum: false
          default: 0
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
      required:
        - name
    ItemViewDTO:
      type: object
      title: ItemViewDTO
      x-tags:
        - item
      description: It is used to display the item in the inventory view
      properties:
        id:
          type: string
        pk:
          type: integer
          default: -1
        name:
          type: string
        barcode:
          type: string
        price1:
          type: string
        price2:
          type: string
        category:
          type: string
        qty:
          exclusiveMinimum: false
          type: number
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        checkQty:
          type: boolean
          x-stoplight:
            id: aps5qtjk2ycmq
          default: false
        PriceOptions:
          type: array
          x-stoplight:
            id: ya6ugtlp8hjc3
          items:
            $ref: '#/components/schemas/itemPriceOptionDTO'
      required:
        - name
    ItemUnitDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pieces:
          minimum: 0
          exclusiveMinimum: false
          type: number
        price:
          minimum: 0
          exclusiveMinimum: false
          type: number
        basic:
          type: boolean
          default: false
        cost:
          type: number
          minimum: 0
      required:
        - name
    StoreDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name
    StoreItemDTO:
      type: object
      properties:
        id:
          type: string
        qty:
          exclusiveMinimum: false
          type: number
        item:
          $ref: '#/components/schemas/ItemSimpleDTO'
        store:
          $ref: '#/components/schemas/StoreNameDTO'
    StoreItemIdOnlyDTO:
      type: object
      properties:
        qty:
          exclusiveMinimum: false
          type: number
        itemId:
          type: string
        storeId:
          type: string
      required:
        - qty
        - itemId
        - storeId
    PkDTO:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
          enum:
            - INVOICE
            - InvoicesItems
            - Money
        value:
          minimum: 0
          exclusiveMinimum: false
          type: number
    AccountUserDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        kind:
          type: string
          enum:
            - CUSTOMER
            - SUPPLIER
            - SALEMAN
            - EMPLOYEE
        balanceIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        balanceOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        phone:
          type: string
        address:
          type: string
        address2:
          type: string
        created_date:
          type: string
          x-stoplight:
            id: fkvjy0iy6toz5
          format: date-time
        lastModifiedDate:
          type: string
          x-stoplight:
            id: 47mf7wx6v5ykd
          format: date-time
        employee:
          type: boolean
          x-stoplight:
            id: 13hd53s7hrn9r
          default: false
      required:
        - name
    AccountUserContainer:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/AccountUserDTO'
        total:
          type: integer
          x-stoplight:
            id: 6ahyus6b0314d
    AccountUserSearchModel:
      type: object
      properties:
        kind:
          type: string
          enum:
            - CUSTOMER
            - SUPPLIER
            - SALEMAN
            - EMPLOYEE
          description: Kind of user searching for
        name:
          type: string
          x-stoplight:
            id: zcl7tzpt3hpb8
          description: name of user searching for
        phone:
          type: string
          x-stoplight:
            id: bmralpe6k2y2t
          description: phone of user searching for
        address:
          type: string
          x-stoplight:
            id: sga598k0q52ps
          description: adress of user searching for
        address_2:
          type: string
          x-stoplight:
            id: odvrflzt79ylv
          description: adress of user searching for
        page:
          type: integer
          x-stoplight:
            id: n0at7ilfmdf65
        size:
          type: integer
          x-stoplight:
            id: i1yxmpssqaim9
        id:
          type: string
          x-stoplight:
            id: yqnhnhx21456f
        employee:
          type: boolean
          x-stoplight:
            id: fm25u2tkotl3d
          default: false
    CreateAccountUserDTO:
      type: object
      properties:
        name:
          type: string
        kind:
          type: string
          enum:
            - CUSTOMER
            - SUPPLIER
            - SALEMAN
            - EMPLOYEE
          default: CUSTOMER
        balanceIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        balanceOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        phone:
          type: string
        address:
          type: string
        address2:
          type: string
        employee:
          type: boolean
          x-stoplight:
            id: 4jmb7ogzbj88z
          default: false
      required:
        - name
    BankDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name
    MoneyDTO:
      type: object
      properties:
        pk:
          type: string
        id:
          type: string
        kind:
          type: string
          enum:
            - PAYMENT
            - RECEIPT
        details:
          type: string
          x-stoplight:
            id: q36ihy0c6t89v
        moneyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        moneyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        bank:
          $ref: '#/components/schemas/BankDTO'
        item:
          $ref: '#/components/schemas/ItemDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        created_date:
          type: string
          format: date-time
    CreateMoneyDTO:
      type: object
      x-stoplight:
        id: 2ekbdrjsummeb
      description: dto to create new money
      properties:
        kind:
          type: string
          enum:
            - PAYMENT
            - RECEIPT
        details:
          type: string
          x-stoplight:
            id: 1arzmtuhggam3
        moneyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        moneyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        bankId:
          type: string
          x-stoplight:
            id: mwz9r5h5p8nlx
        accountId:
          type: string
          x-stoplight:
            id: 6ub77pfec1wj6
      required:
        - kind
    InvoiceDTO:
      type: object
      properties:
        pk:
          type: string
          description: 'Invoice pk '
        id:
          type: string
        kind:
          type: string
          enum:
            - SALE
            - PURCHASE
            - ADJUST
            - TRANSFER
            - SALEQUOTE
            - RETURNPUR
            - RETURNSALE
            - COMPONENT
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netResult:
          type: number
        expenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        expensesType:
          type: string
        bank:
          $ref: '#/components/schemas/BankDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        invoiceItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemDTO'
        created_by:
          type: string
        created_date:
          type: string
          format: date-time
        deferred:
          type: boolean
          x-stoplight:
            id: 7skmkczs1v9fp
        store:
          $ref: '#/components/schemas/StoreDTO'
        userNetCost:
          type: number
          x-stoplight:
            id: u1gev2i5c512j
        userNetPrice:
          type: number
          x-stoplight:
            id: eyghgkmne2e9y
    InvoiceViewDTO:
      type: object
      x-examples:
        example-1:
          pk: string
          id: string
          kind: SALE
          totalCost: 0
          totalPrice: 0
          discountPer: 0
          discount: 0
          additions: 0
          additionsType: string
          netCost: 0
          netPrice: 0
          expenses: 0
          expensesType: string
          bank:
            id: string
            name: string
          item:
            id: string
            pk: -1
            name: string
            barcode: string
            price1: string
            price2: string
            category: string
            qty: 0
            cost: 0
            itemUnits:
              - id: string
                name: string
                pieces: 0
                price: 0
                basic: false
            createdBy: string
            createdDate: '2019-08-24T14:15:22Z'
          account:
            id: string
            name: string
            kind: CUSTOMER
            balanceIn: 0
            balanceOut: 0
            phone: string
            address: string
            address2: string
          invoiceItems:
            - pk: string
              id: string
              unit: string
              unitQtyIn: 0
              unitQtyOut: 0
              discount: 0
              discountPer: 0
              totalCost: 0
              totalPrice: 0
              qtyIn: 0
              qtyOut: 0
              netCost: 0
              netPrice: 0
              itemName: string
          created_by: string
          created_date: '2019-08-24T14:15:22Z'
          last_modified_by: string
          last_modified_date: '2019-08-24T14:15:22Z'
          invoiceItemsCount: string
      properties:
        pk:
          type: string
          description: 'Invoice pk '
        id:
          type: string
        kind:
          type: string
          enum:
            - SALE
            - PURCHASE
            - ADJUST
            - TRANSFER
            - SALEQUOTE
            - RETURNPUR
            - RETURNSALE
            - COMPONENT
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netResult:
          type: number
        expenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        expensesType:
          type: string
        bank:
          $ref: '#/components/schemas/BankDTO'
        item:
          $ref: '#/components/schemas/ItemDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        invoiceItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemViewDTO'
        created_by:
          type: string
        created_date:
          type: string
          format: date-time
        last_modified_by:
          type: string
        last_modified_date:
          type: string
          format: date-time
        invoiceItemsCount:
          type: string
        deferred:
          type: boolean
          x-stoplight:
            id: w655ialp3egre
        store:
          $ref: '#/components/schemas/StoreDTO'
    InvoiceViewSimpleDTO:
      type: object
      properties:
        pk:
          type: string
          description: 'Invoice pk '
        id:
          type: string
        kind:
          type: string
          enum:
            - SALE
            - PURCHASE
            - ADJUST
            - TRANSFER
            - SALEQUOTE
            - RETURNPUR
            - RETURNSALE
            - COMPONENT
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        netPrice:
          type: number
          minimum: 0
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netResult:
          type: number
        created_by:
          type: string
        ItemsCount:
          type: string
        created_date:
          type: string
          format: date-time
        last_modified_by:
          type: string
        last_modified_date:
          type: string
          format: date-time
        bank:
          $ref: '#/components/schemas/BankDTO'
        item:
          $ref: '#/components/schemas/ItemSimpleDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        deferred:
          type: boolean
          x-stoplight:
            id: esn8m7uagipey
        store:
          $ref: '#/components/schemas/StoreDTO'
    InvoiceUpdateDTO:
      type: object
      description: |-
        A model that contains all the elements that can be modified 
        in the invoice by requesting the modification
      title: Invoice update DTO
      properties:
        id:
          type: string
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        expenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        expensesType:
          type: string
        bankId:
          type: string
        accountId:
          type: string
        created_date:
          type: string
          format: date-time
        storeId:
          type: string
          x-stoplight:
            id: 48kcjll1tq5dt
        deferred:
          type: boolean
          x-stoplight:
            id: mv94k3lxb22ol
        userNetCost:
          type: number
          x-stoplight:
            id: jk74e9fi84jty
          default: 0
        userNetPrice:
          type: number
          x-stoplight:
            id: o1l7i2va9tjwp
          default: 0
    InvoiceItemDTO:
      type: object
      properties:
        pk:
          type: string
        id:
          type: string
        unit:
          type: string
        unitPieces:
          minimum: 0
          exclusiveMinimum: false
          type: number
        userQty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        price:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        item:
          $ref: '#/components/schemas/ItemSimpleDTO'
    InvoiceItemUpdateDTO:
      type: object
      properties:
        id:
          type: string
        unitPieces:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        price:
          minimum: 0
          exclusiveMinimum: false
          type: number
    InvoiceItemViewDTO:
      type: object
      properties:
        pk:
          type: string
        id:
          type: string
        unit:
          type: string
        unitQtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        itemName:
          type: string
    CreateInvoiceItemDTO:
      type: object
      title: CreateInvoiceItemDTO
      description: model for creating new invoice items
      properties:
        id:
          type: string
        itemId:
          type: string
        unitId:
          type: string
        qty:
          type: number
          minimum: 0
          exclusiveMinimum: false
          default: 0
        price:
          type: number
          default: 0
          minimum: 0
      required:
        - itemId
    AdminUserDTO:
      required:
        - login
      type: object
      properties:
        id:
          type: string
        login:
          maxLength: 50
          minLength: 1
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
    ManagedUserVM:
      required:
        - login
      type: object
      properties:
        id:
          type: string
        login:
          maxLength: 50
          minLength: 1
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
    LoginVM:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 1
          type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
        rememberMe:
          type: boolean
    JWTToken:
      type: object
      properties:
        id_token:
          type: string
    User:
      required:
        - login
      type: object
      properties:
        id:
          type: string
        login:
          maxLength: 50
          minLength: 1
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        resetDate:
          type: string
          format: date-time
    KeyAndPasswordVM:
      type: object
      properties:
        key:
          type: string
        newPassword:
          type: string
    PasswordChangeDTO:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
    CategoryItem:
      title: CategoryItem
      x-stoplight:
        id: c3hb648r6gfz2
      type: object
      properties:
        name:
          type: string
    PaginationSearchModel:
      title: PaginationSearchModel
      x-stoplight:
        id: kdba1ibk06p8b
      type: object
      properties:
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 10
        sortField:
          type: string
        sortOrder:
          type: string
        searchText:
          type: string
    InvoicesSearchModel:
      title: InvoicesSearchModel
      x-stoplight:
        id: kdba1ibk06p8b
      type: object
      description: 'search with pagination , plain text , date [ from , to ]'
      properties:
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 10
        sortField:
          type: string
        sortOrder:
          type: string
        searchText:
          type: string
        dateFrom:
          type: string
        dateTo:
          type: string
        kind:
          type: string
          enum:
            - ALL
            - SALE
            - PURCHASE
        accountId:
          type: string
          x-stoplight:
            id: 7a479sd0ae9l8
        storeId:
          type: string
          x-stoplight:
            id: b8mkyfcn9d5cd
        bankId:
          type: string
          x-stoplight:
            id: 88g0mc2wo6zkx
    MoniesSearchModel:
      title: MoniesSearchModel
      x-stoplight:
        id: kdba1ibk06p8b
      type: object
      description: 'search Monies with pagination , plain text , date [ from , to ] also account and bank'
      properties:
        id:
          type: string
          description: search for single money instance
          default: null
        pk:
          type: string
          default: null
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 100
        sortField:
          type: string
          default: createdDate
        sortOrder:
          type: string
          default: DESC
          enum:
            - DESC
            - ASC
        kind:
          type: string
          description: text to seach for
          enum:
            - RECEIPT
            - PAYMENT
          default: null
        dateFrom:
          type: string
          description: date form to seach for or null
          default: null
        dateTo:
          type: string
          description: date to to seach for or null
          default: null
        accountId:
          type: string
          default: null
        bankId:
          type: string
          default: null
        details:
          type: string
          x-stoplight:
            id: 7v24ok939m287
          default: null
    ItemViewDTOContainer:
      title: ItemViewDTOContainer
      x-stoplight:
        id: dpnzre10uswhm
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ItemViewDTO'
        total:
          type: integer
    InvoiceViewDTOContainer:
      title: InvoiceViewDTOContainer
      x-stoplight:
        id: dpnzre10uswhm
      type: object
      description: ''
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceViewSimpleDTO'
        total:
          type: integer
        totalCost:
          type: number
        totalPrice:
          type: number
        netCost:
          type: number
        netPrice:
          type: number
        netResult:
          type: number
        totalDiscount:
          type: number
    MoniesViewDTOContainer:
      title: MoniesViewDTOContainer
      x-stoplight:
        id: dpnzre10uswhm
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/MoneyDTO'
        totalMoneyIn:
          type: integer
        totalMoneyOut:
          type: number
        total:
          type: integer
          x-stoplight:
            id: kzupbqzgmizzz
          default: 0
    StoreNameDTO:
      title: StoreNameDTO
      x-stoplight:
        id: 1rng5h6x237wc
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    SysOptions:
      title: SysOptions
      x-stoplight:
        id: zyfwknmaoo5pi
      type: object
      x-examples:
        example-1:
          appName: اسم الشركة
          appVersion: 1.0.0.0
          reportFilesDir: KONSOL_REPORTS
          contactInfo:
            VendorContactName: اسم صاحب العمل
            VendorPhone: هاتف صاحب العمل
            VendorAddress: عنوان صاحب العمل
            VendorCity: 'مدينة '
            VendorCountry: دولة
            VendorWebsite: موقع
            VendorEmail: بريد
          options:
            salesInvoiceOptions:
              selectedInvoiceReport: string
              isDefault: true
      description: 'Main Application options and settings '
      properties:
        appName:
          type: string
          default: اسم الشركة
          description: 'Main Application name '
        appVersion:
          type: string
          default: 1.0.0.0
          description: current application version
        contactInfo:
          $ref: '#/components/schemas/ContactInfo'
        settings:
          $ref: '#/components/schemas/GlobalSettings'
        showTimer:
          type: boolean
          default: true
    InvoicePrintDTO:
      title: InvoicePrintDTO
      x-stoplight:
        id: undra196b9cyo
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceDTO'
        global_info:
          $ref: '#/components/schemas/ContactInfo'
    ItemsPrintDTO:
      title: InvoicePrintDTO
      x-stoplight:
        id: undra196b9cyo
      type: object
      properties:
        global_info:
          $ref: '#/components/schemas/ContactInfo'
        item:
          $ref: '#/components/schemas/ItemViewDTO'
      description: ''
    ContactInfo:
      title: ContactInfo
      x-stoplight:
        id: gkeun9pxkdpgc
      type: object
      description: |-
        main app owner contact info
         [ used in print designer ]
      properties:
        VendorContactName:
          type: string
          default: اسم صاحب العمل
        VendorPhone:
          type: string
          default: هاتف صاحب العمل
        VendorAddress:
          type: string
          default: عنوان صاحب العمل
        VendorCity:
          type: string
          default: 'مدينة '
        VendorCountry:
          type: string
          default: دولة
        VendorWebsite:
          type: string
          default: موقع
        VendorEmail:
          type: string
          default: بريد
      x-internal: false
    GlobalSettings:
      title: GlobalSettings
      x-stoplight:
        id: 7djw1ifd9eagq
      type: object
      x-examples:
        example-1:
          salesInvoiceOptions:
            selectedInvoiceReport: Default
            autoPrintAfterSave: true
            printPreview: false
            userReportFile: true
            selectedPrinterName: default
            checkItemQty: true
          reportFilesDir: reports
          selectedStoreId: default
          mainPrinterName: default
          cultureName: ar-EG
      properties:
        salesInvoiceOptions:
          type: object
          properties:
            selectedInvoiceReport:
              type: string
              default: Default
              description: selected file for invoice to print UI_OPTION
            autoPrintAfterSave:
              type: boolean
              default: true
              description: send print order directly to printer after saving  UI_OPTION
            printPreview:
              type: boolean
              default: false
              description: show preview after saving invoice UI_OPTION
            userReportFile:
              type: boolean
            selectedPrinterName:
              type: string
              default: default
              description: selected printer name to send print file to UI_OPTION
            checkItemQty:
              type: boolean
              default: true
              description: check if item has required qty in store BE_OPTION
            updateItemQtyAfterSave:
              type: boolean
              default: true
              description: updates item qty saving invoice add/subtract BE_OPTION
            report_page_name:
              type: string
              default: sale
        reportFilesDir:
          type: string
          default: reports
          description: selected folder for report files
        selectedStoreId:
          type: string
          default: default
          description: selected store to add and subtract items qty from after saving invoice BE_OPTION
        mainPrinterName:
          type: string
          default: default
          description: selected printer name to send print file to UI_OPTION
        cultureName:
          type: string
          default: ar-EG
          description: 'culture language for currency persentation in ui / table / print / preview '
        ItemsOptions:
          type: object
          properties:
            selectedReport:
              type: string
              default: Default
            report_page_name:
              type: string
              default: items
        purchaseInvoiceOptions:
          type: object
          properties:
            selectedInvoiceReport:
              type: string
              default: Default
            autoPrintAfterSave:
              type: boolean
              default: true
            printPreview:
              type: boolean
              default: true
            userReportFile:
              type: string
            selectedPrinterName:
              type: string
              default: default
            updateItemQtyAfterSave:
              type: boolean
              default: true
            report_page_name:
              type: string
              default: pur
        report_page_names_List:
          type: array
          items:
            type: string
            enum:
              - sale
              - pur
              - items
              - invoiceReport
            default: 'sale,pur,items,invoiceReport'
    KonsolGridBand:
      title: KonsolGridBand
      x-stoplight:
        id: pg1ha7lkm12tk
      type: object
      x-examples: {}
      description: ''
      properties:
        caption:
          type: string
        visible:
          type: boolean
          default: true
        visibleCustomization:
          type: boolean
          default: true
        columns:
          type: array
          items:
            type: string
    KonsolGridColumn:
      title: KonsolGridColumn
      x-stoplight:
        id: pg1ha7lkm12tk
      type: object
      x-examples: {}
      description: ''
      properties:
        fieldName:
          type: string
          default: name
        capition:
          type: string
          default: capition
        visible:
          type: boolean
          default: true
        visibleCustomization:
          type: boolean
          default: true
        description:
          type: string
        displayFormat:
          type: string
        editable:
          type: boolean
          default: false
        foreColor:
          type: string
        index:
          type: integer
    KonsolGridOptions:
      title: GridOptions
      x-stoplight:
        id: orxnk6df31kl4
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          default: default
        allowBands:
          type: boolean
          default: true
        showSearch:
          type: boolean
          default: false
        showGroupSearch:
          type: boolean
          default: false
        sortField:
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/KonsolGridColumn'
        bands:
          type: array
          items:
            $ref: '#/components/schemas/KonsolGridBand'
        rowHeight:
          type: integer
          default: 30
        showCurrency:
          type: boolean
          default: true
    ServerSettings:
      title: ServerSettings
      x-stoplight:
        id: c57j8t25xgkyp
      type: object
      properties:
        id:
          type: string
        license:
          description: License information for the server
          type: array
          items:
            $ref: '#/components/schemas/LicenseDTO'
        MAIN_SELECTED_STORE_ID:
          type: string
          x-stoplight:
            id: jojbl025jj1wb
          default: default
        MAIN_SELECTED_BANK_ID:
          type: string
          x-stoplight:
            id: otne28m01ul8p
          default: default
        SALES_CHECK_ITEM_QTY:
          type: boolean
          x-stoplight:
            id: l5hesnrihtlft
          default: true
        SALES_UPDATE_ITEM_QTY_AFTER_SAVE:
          type: boolean
          x-stoplight:
            id: jubor8k789qix
          default: true
        PURCHASE_UPDATE_ITEM_QTY_AFTER_SAVE:
          type: boolean
          x-stoplight:
            id: gldsozrb9xp7h
          default: true
        PLAYSTATION_SELECTED_STORE_ID:
          type: string
          x-stoplight:
            id: gl8ynscc3kryw
        PLAYSTATION_SELECTED_BANK_ID:
          type: string
          x-stoplight:
            id: 5rcpvzedqebu6
        ALLOW_NEGATIVE_INVENTORY:
          type: boolean
          x-stoplight:
            id: iysnhrpy7cdbh
          default: false
          description: Indicates that inventory can drop below zero.
        SAVE_INVOICE_DELETETED_INVOICEITEMS:
          type: boolean
          x-stoplight:
            id: gkk505h0towkn
          description: 'This option determines whether deleted invoice items should be saved or logged for record-keeping purposes. When enabled, any items removed from an invoice are retained in the system, allowing for auditing or restoration if needed.'
          default: true
        BACKUP_ENABLED:
          type: boolean
          default: true
          description: Enable/disable automatic backup system
        BACKUP_SCHEDULE_TYPE:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - MANUAL
          default: DAILY
          description: Frequency of automatic backups
        BACKUP_TIME:
          type: string
          format: time
          default: '23:00'
          description: 'Time to run backup (HH:mm format)'
        BACKUP_DAYS:
          type: array
          description: Days to run backup (for WEEKLY schedule)
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        BACKUP_RETENTION_DAYS:
          type: integer
          default: 30
          description: Number of days to keep backup files
        BACKUP_LOCATION:
          type: string
          default: 'C:/KonsolBackups'
          description: Directory path to store backup files
        BACKUP_INCLUDE_FILES:
          type: boolean
          default: true
          description: Include file attachments in backup
        BACKUP_COMPRESS:
          type: boolean
          default: true
          description: Compress backup files
        MONGODB_DUMP_PATH:
          type: string
          default: 'C:/Program Files/MongoDB/Tools/100/bin/mongodump.exe'
          description: Path to MongoDB dump executable
        MONGODB_RESTORE_PATH:
          type: string
          default: 'C:/Program Files/MongoDB/Tools/100/bin/mongorestore.exe'
          description: Path to MongoDB restore executable
        PLAYSTATION_DEFAULT_PRINTER:
          type: string
          default: 'default'
          description: Default printer name for playstation-related printing
        PLAYSTATION_PRINT_ON_CHECKOUT:
          type: boolean
          default: true
          description: Whether to automatically print when checking out from playstation sessions
    AuthorityDTO:
      title: AuthorityDTO
      x-stoplight:
        id: wavrzl1rq54tp
      type: object
      properties:
        id:
          type: string
        category:
          type: string
          x-stoplight:
            id: 4602fxjsl6vtz
        description:
          type: string
          x-stoplight:
            id: 0si0umrjegckk
    BankTransactionsContainer:
      title: BankTransactionsContainer
      x-stoplight:
        id: 76phw1zwkyv5o
      type: object
      properties:
        result:
          type: array
          x-stoplight:
            id: eg8ulp9orxpmf
          items:
            $ref: '#/components/schemas/BankTransactionsDTO'
        total:
          type: number
          x-stoplight:
            id: 8tsb7yw3o2fos
    ItemAnalysisSearchDTO:
      title: ItemAnalysisSearchDTO
      x-stoplight:
        id: bk5auh8580ff8
      type: object
      properties:
        itemId:
          type: string
          x-stoplight:
            id: xrlcxdyjix3lj
        storeId:
          type: string
          x-stoplight:
            id: o175gqgmqtzsu
        startDate:
          type: string
          x-stoplight:
            id: 2txw30e0682fo
          format: date-time
        endDate:
          type: string
          x-stoplight:
            id: mmom1kn5a3zov
          format: date-time
    ChartDataContainer:
      title: ChartDataContainer
      x-stoplight:
        id: hdwojcgurewv1
      type: object
      properties:
        result:
          type: array
          x-stoplight:
            id: elfy5r65tjlhl
          items:
            $ref: '#/components/schemas/ChartDataDTO'
        total:
          type: number
          x-stoplight:
            id: vraqqzw8wqy7f
    ChartSearchDTO:
      title: ChartSearchDTO
      x-stoplight:
        id: ecs2mybsvs888
      type: object
      properties:
        itemId:
          type: string
          x-stoplight:
            id: 87dh9mio2za0i
        startDate:
          type: string
          x-stoplight:
            id: ss03k97cvljto
          format: date-time
        endDate:
          type: string
          x-stoplight:
            id: zi7rxalhp46iy
          format: date-time
      required:
        - itemId
    FinancialDashboardDTO:
      type: object
      properties:
        salesMetrics:
          $ref: '#/components/schemas/SalesMetricsDTO'
        salesCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
        cashFlowMetrics:
          $ref: '#/components/schemas/CashFlowMetricsDTO'
        cashFlowCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
        invoiceAnalysis:
          $ref: '#/components/schemas/InvoiceAnalysisDTO'
        invoiceCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
        invoiceItemAnalysis:
          $ref: '#/components/schemas/InvoiceItemAnalysisDTO'
        itemSalesCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
        performanceIndicators:
          $ref: '#/components/schemas/PerformanceIndicatorsDTO'
        performanceCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
        storeAccountAnalysis:
          $ref: '#/components/schemas/StoreAccountAnalysisDTO'
        analysisCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        storeId:
          type: string
        accountId:
          type: string
        bankId:
          type: string
    SalesMetricsDTO:
      type: object
      properties:
        totalSales:
          type: number
          format: decimal
        netSales:
          type: number
          format: decimal
        totalCost:
          type: number
          format: decimal
        netCost:
          type: number
          format: decimal
        netProfit:
          type: number
          format: decimal
        dailyRevenue:
          type: number
          format: decimal
        monthlyRevenue:
          type: number
          format: decimal
        netUserSales:
          type: number
          x-stoplight:
            id: fzj7a8mesd2iv
    FinancialChartDTO:
      type: object
      description: 'Data Transfer Object for financial dashboard charts and visualizations. Supports various chart types including line, bar, pie, radar, and area charts.'
      properties:
        chartId:
          type: string
        title:
          type: string
        subtitle:
          type: string
        chartType:
          type: string
        xAxisLabel:
          type: string
        yAxisLabel:
          type: string
        labels:
          type: array
          items:
            type: string
        series:
          type: array
          items:
            $ref: '#/components/schemas/SeriesData'
        options:
          type: object
          additionalProperties:
            type: object
        metadata:
          type: object
          additionalProperties:
            type: string
        data:
          type: array
          items:
            type: number
            format: decimal
      title: ''
    SeriesData:
      type: object
      description: Represents a data series in the chart
      properties:
        name:
          type: string
        type:
          type: string
        data:
          type: array
          items:
            type: number
            format: decimal
        style:
          type: object
          additionalProperties:
            type: object
        visible:
          type: boolean
          default: true
        yAxisIndex:
          type: integer
    CashFlowMetricsDTO:
      type: object
      description: Data Transfer Object for cash flow metrics and bank balances
      properties:
        totalMoneyIn:
          type: number
          format: decimal
          description: Total incoming cash flow
        totalMoneyOut:
          type: number
          format: decimal
          description: Total outgoing cash flow
        bankBalances:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Map of bank ID to balance
        currentCashPosition:
          type: number
          format: decimal
          description: Current total cash position across all accounts
    PerformanceMetricsDTO:
      type: object
      properties:
        totalRevenue:
          type: number
          format: decimal
        averageInvoiceValue:
          type: number
          format: decimal
        grossProfit:
          type: number
          format: decimal
        grossProfitMargin:
          type: number
          format: decimal
        operatingExpenses:
          type: number
          format: decimal
        operatingProfit:
          type: number
          format: decimal
        operatingProfitMargin:
          type: number
          format: decimal
        netProfit:
          type: number
          format: decimal
        netProfitMargin:
          type: number
          format: decimal
        revenueGrowth:
          type: number
          format: decimal
        totalTransactions:
          type: integer
        additionalMetrics:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Map of additional metric names to values
    InvoiceAnalysisDTO:
      type: object
      description: Data Transfer Object for invoice analysis metrics and statistics
      properties:
        averageDiscount:
          type: number
          format: decimal
          description: Average discount amount across all invoices
        averageDiscountPercentage:
          type: integer
          description: Average discount percentage across all invoices
        totalAdditions:
          type: number
          format: decimal
          description: Total additional charges on invoices
        totalExpenses:
          type: number
          format: decimal
          description: Total expenses across all invoices
        deferredInvoicesCount:
          type: integer
          format: int64
          description: Number of deferred invoices
        expensesByType:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Map of expense types to their total amounts
    StoreAccountAnalysisDTO:
      type: object
      properties:
        storePerformance:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Store ID to sales amount
        accountPerformance:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Account ID to transaction volume
        bankTransactions:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Bank ID to transaction volume
        storeProfitMargins:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Store ID to profit margin
        storeTransactionCounts:
          type: object
          additionalProperties:
            type: integer
          description: Store ID to number of transactions
        storeRevenueGrowth:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Store ID to revenue growth rate
        accountBalances:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Account ID to current balance
        accountCreditLimits:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Account ID to credit limit
        topStores:
          type: array
          items:
            $ref: '#/components/schemas/TopPerformerDTO'
        topAccounts:
          type: array
          items:
            $ref: '#/components/schemas/TopPerformerDTO'
        storeMetrics:
          type: array
          items:
            $ref: '#/components/schemas/StoreMetricsDTO'
        accountMetrics:
          type: array
          items:
            $ref: '#/components/schemas/AccountMetricsDTO'
    StoreMetricsDTO:
      type: object
      properties:
        storeId:
          type: string
        storeName:
          type: string
        totalRevenue:
          type: number
          format: decimal
        totalCost:
          type: number
          format: decimal
        profitMargin:
          type: number
          format: decimal
        transactionCount:
          type: integer
        averageTransactionValue:
          type: number
          format: decimal
        revenueGrowth:
          type: number
          format: decimal
    AccountMetricsDTO:
      type: object
      properties:
        accountId:
          type: string
        accountName:
          type: string
        totalTransactionVolume:
          type: number
          format: decimal
        transactionCount:
          type: integer
        averageTransactionValue:
          type: number
          format: decimal
        currentBalance:
          type: number
          format: decimal
        creditLimit:
          type: number
          format: decimal
        creditUtilization:
          type: number
          format: decimal
    TopPerformerDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        totalRevenue:
          type: number
          format: decimal
        totalProfit:
          type: number
          format: decimal
        profitMargin:
          type: number
          format: decimal
        transactionCount:
          type: integer
        averageTransactionValue:
          type: number
          format: decimal
        trend:
          type: array
          items:
            $ref: '#/components/schemas/TrendPoint'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricValue'
    TrendPoint:
      type: object
      properties:
        period:
          type: string
        value:
          type: number
          format: decimal
        growth:
          type: number
          format: decimal
    MetricValue:
      type: object
      properties:
        name:
          type: string
        value:
          type: number
          format: decimal
        unit:
          type: string
    InvoiceItemAnalysisDTO:
      type: object
      description: Data Transfer Object for detailed invoice item analysis and metrics
      properties:
        totalItemsSold:
          type: number
          format: decimal
          description: Total quantity of items sold
        totalItemRevenue:
          type: number
          format: decimal
          description: Total revenue from all items
        averageItemPrice:
          type: number
          format: decimal
          description: Average price per item
        topSellingItemRevenue:
          type: number
          format: decimal
          description: Revenue from the top selling item
        topSellingItemName:
          type: string
          description: Name of the top selling item
        itemCategoryDistribution:
          type: object
          additionalProperties:
            type: number
            format: decimal
          description: Distribution of sales by item category
        itemProfitMargins:
          type: array
          items:
            $ref: '#/components/schemas/ItemProfitabilityDTO'
          description: List of profit margins by item
        topSellingItems:
          type: array
          items:
            $ref: '#/components/schemas/ItemSalesDTO'
          description: List of top selling items with details
        itemSalesCharts:
          type: array
          items:
            $ref: '#/components/schemas/FinancialChartDTO'
          description: Charts showing item sales trends
    ItemProfitabilityDTO:
      type: object
      description: Data Transfer Object for item profitability metrics
      properties:
        itemId:
          type: string
          description: Unique identifier of the item
        itemName:
          type: string
          description: Name of the item
        totalRevenue:
          type: number
          format: decimal
          description: Total revenue generated by the item
        totalCost:
          type: number
          format: decimal
          description: Total cost of the item
        grossProfit:
          type: number
          format: decimal
          description: Gross profit (revenue - cost)
        profitMargin:
          type: number
          format: decimal
          description: Profit margin percentage
        salesVolume:
          type: integer
          format: int64
          description: Number of units sold
        averagePrice:
          type: number
          format: decimal
          description: Average selling price
        averageCost:
          type: number
          format: decimal
          description: Average cost per unit
    ItemSalesDTO:
      type: object
      description: Data Transfer Object for item sales details
      properties:
        itemName:
          type: string
          description: Name of the item
        itemCode:
          type: string
          description: Item code/SKU
        quantity:
          type: number
          format: decimal
          description: Quantity sold
        revenue:
          type: number
          format: decimal
          description: Total revenue from this item
        profit:
          type: number
          format: decimal
          description: Total profit from this item
        profitMargin:
          type: number
          format: decimal
          description: Profit margin percentage
    PerformanceIndicatorsDTO:
      type: object
      description: Data Transfer Object for key financial performance indicators and ratios
      properties:
        grossProfitMargin:
          type: number
          format: decimal
          description: Gross profit as a percentage of revenue
        netProfitMargin:
          type: number
          format: decimal
          description: Net profit as a percentage of revenue
        operatingExpensesRatio:
          type: number
          format: decimal
          description: Operating expenses as a percentage of revenue
        currentRatio:
          type: number
          format: decimal
          description: Current assets divided by current liabilities
        quickRatio:
          type: number
          format: decimal
          description: Quick assets divided by current liabilities
        revenueGrowth:
          type: number
          format: decimal
          description: Percentage growth in revenue compared to previous period
    FinancialSearchDTO:
      title: FinancialSearchDTO
      x-stoplight:
        id: nd3v8zrkql4z9
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        storeId:
          type: string
        accountId:
          type: string
        bankId:
          type: string
      required:
        - startDate
        - endDate
    AccountTransactionsDTO:
      type: object
      properties:
        id:
          type: string
        pk:
          type: string
        accountId:
          type: string
        accountName:
          type: string
        sourceType:
          type: string
        sourceKind:
          type: string
        sourceId:
          type: string
        sourcePk:
          type: string
        moneyIn:
          type: number
        moneyOut:
          type: number
        details:
          type: string
        createdDate:
          type: string
          format: date-time
    AccountTransactionsContainer:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/AccountTransactionsDTO'
        total:
          type: integer
          format: int64
    PsDeviceDTO:
      title: PsDeviceDTO
      x-stoplight:
        id: dp84jb2je1ncq
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: 4rc4eexcxttkb
        active:
          type: boolean
          x-stoplight:
            id: ul3rbglgpxq6h
        type:
          $ref: '#/components/schemas/PsDeviceType'
        session:
          $ref: '#/components/schemas/PsSessionDTO'
        timeManagement:
          type: boolean
          x-stoplight:
            id: rgtzxzra2h25z
          default: true
        category:
          type: string
          x-stoplight:
            id: j2zbmv9lc5io8
          default: PLAYSTATION
    PsDeviceType:
      title: PsDeviceType
      x-stoplight:
        id: 7fucva6o4731t
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: 4scbjjx0rfaee
        price:
          type: string
          x-stoplight:
            id: 2six8wm36trf5
    PsSessionDTO:
      title: PsSessionDTO
      x-stoplight:
        id: io8b276yztg3l
      type: object
      properties:
        id:
          type: string
        startTime:
          type: string
          x-stoplight:
            id: 499ri7wfc3icj
          format: date-time
        invoice:
          $ref: '#/components/schemas/InvoiceDTO'
        type:
          $ref: '#/components/schemas/PsDeviceType'
        deviceSessions:
          type: array
          x-stoplight:
            id: v2p7x2hrihbku
          items:
            $ref: '#/components/schemas/PsSessionDTO'
        deviceSessionsNetPrice:
          type: number
          x-stoplight:
            id: cj8dn8k0regje
        endTime:
          type: string
          x-stoplight:
            id: 7o0mztgx5nh0e
          format: date-time
        containerId:
          type: string
          x-stoplight:
            id: j1r7rjfus45i9
        deviceName:
          type: string
          x-stoplight:
            id: 8gh0gwpz8ftbh
        deviceId:
          type: string
          x-stoplight:
            id: fbxt339d0j28m
    PlaystationContainer:
      type: object
      description: A model representing a Playstation container.
      properties:
        id:
          type: string
          description: The unique identifier for the Playstation container.
        name:
          type: string
          description: The name of the Playstation container.
        category:
          type: string
          description: The category of the Playstation container.
        defaultIcon:
          type: string
          description: The default icon for the Playstation container.
        hasTimeManagement:
          type: boolean
          description: Indicates if time management is enabled.
        showType:
          type: boolean
          description: Indicates if the type is shown.
        showTime:
          type: boolean
          description: Indicates if time is shown.
        canMoveDevice:
          type: boolean
          description: Indicates if devices can be moved.
        canHaveMultiTimeManagement:
          type: boolean
          description: Indicates if multiple time management options are supported.
        acceptedOrderCategories:
          type: array
          description: Accepted order categories.
          items:
            x-stoplight:
              id: w50ajtf84ow7s
            type: string
        orderSelectedPriceCategory:
          type: string
          description: Selected price category for orders.
      required:
        - name
        - category
        - hasTimeManagement
        - showType
        - showTime
        - canMoveDevice
        - canHaveMultiTimeManagement
        - acceptedOrderCategories
        - orderSelectedPriceCategory
    itemPriceOptionDTO:
      title: itemPriceOptionDTO
      x-stoplight:
        id: 4y4ygl7z4t3gf
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: ys2o8awjvb7sd
        value:
          type: number
          x-stoplight:
            id: e7f6scuszutij
          minimum: 0
          default: 0
        refId:
          type: string
          x-stoplight:
            id: md5lp5amzmmuv
      required:
        - name
        - value
    StartDeviceSessionDTO:
      title: StartDeviceSessionDTO
      x-stoplight:
        id: 9ayg5e6equ6oi
      type: object
      properties:
        containerId:
          type: string
          x-stoplight:
            id: qo5b0jfzx3j5r
      required:
        - containerId
    SheftDTO:
      type: object
      properties:
        id:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        active:
          type: boolean
          default: false
        assignedEmployee:
          type: string
        duration:
          type: string
          format: duration
        totalprice:
          type: number
          format: decimal
          default: 0
        totalCost:
          type: number
          format: decimal
          default: 0
        netPrice:
          type: number
          format: decimal
          default: 0
        netCost:
          type: number
          format: decimal
          default: 0
        netUserPrice:
          type: number
          format: decimal
          default: 0
        totalItemsOut:
          type: number
          format: decimal
          default: 0
        discount:
          type: number
          format: decimal
          default: 0
        invoicesAdditions:
          type: number
          format: decimal
          default: 0
        additions:
          type: number
          format: decimal
          default: 0
        additionsNotes:
          type: string
          default: 0
        invoicesExpenses:
          type: number
          format: decimal
          default: 0
        sheftExpenses:
          type: number
          format: decimal
          default: 0
        totalinvoices:
          type: number
          format: decimal
          default: 0
        totaldeletedItems:
          type: number
          format: decimal
          default: 0
        totaldeletedItemsPrice:
          type: number
          format: decimal
          default: 0
        notes:
          type: string
    SheftSimpleDTO:
      type: object
      properties:
        id:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        active:
          type: boolean
          default: false
        assignedEmployee:
          type: string
        duration:
          type: string
          format: duration
    PlaystationEndSessionDTO:
      title: PlaystationEndSessionDTO
      x-stoplight:
        id: 88a5mhrby9h5q
      type: object
      properties:
        matchFinalUserPrice:
          type: boolean
          x-stoplight:
            id: 8cmf5uab90b10
          default: false
        printSessionRecipt:
          type: boolean
          x-stoplight:
            id: r5pp6vhee8g8z
          default: false
    LicenseDTO:
      type: object
      description: Data Transfer Object for software license information
      properties:
        clientId:
          type: string
          description: Unique identifier for the client
        licenseKey:
          type: string
          description: License activation key
        expiryDate:
          type: string
          format: date-time
          description: License expiration date and time
        hardwareIdentifiers:
          type: object
          properties:
            processorIdentifier:
              type: string
              description: CPU identifier
            processorArchitecture:
              type: string
              description: CPU architecture
            processorArchitew6432:
              type: string
              description: CPU architecture (32/64 bit)
            numberOfProcessors:
              type: string
              description: Number of CPU processors
            motherboardSerialNumber:
              type: string
              description: Motherboard serial number
            biosSerialNumber:
              type: string
              description: BIOS serial number
            diskDriveSerialNumber:
              type: string
              description: Disk drive serial number
          description: Hardware identifiers used for license validation
