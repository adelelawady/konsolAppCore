openapi: 3.0.1
info:
  title: Konsol Core API
  description: Konsol Core API documentation
  termsOfService: ''
  contact:
    url: 'https://github.com/adelelawady'
    name: ADEL ALI (KONSOL)
    email: adel50ali50@gmail.com
  license:
    name: 'APACHE LICENSE, VERSION 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  version: 0.0.1
servers:
  - url: 'http://localhost:8080/api'
    description: Generated server url
paths:
  '/stores/{id}':
    get:
      tags:
        - store-resource
      operationId: getStore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreDTO'
    delete:
      tags:
        - store-resource
      operationId: deleteStore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - store-resource
      operationId: updateStore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StoreDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/monies/{id}':
    get:
      tags:
        - money-resource
      operationId: getMoney
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyDTO'
    delete:
      tags:
        - money-resource
      operationId: deleteMoney
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - money-resource
      operationId: updateMoney
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MoneyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/items/{id}':
    get:
      tags:
        - item-resource
      operationId: getItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
      summary: ''
    put:
      tags:
        - item-resource
      operationId: updateItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    delete:
      tags:
        - item-resource
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - item-resource
      operationId: partialUpdateItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/invoices/{id}':
    get:
      tags:
        - invoice-resource
      operationId: getInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
      description: 'get single invoice by id '
    delete:
      tags:
        - invoice-resource
      operationId: deleteInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      description: delete invoice by invoice id
    patch:
      tags:
        - invoice-resource
      operationId: updateInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdateDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/InvoiceDTO'
        required: true
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewSimpleDTO'
      description: 'update invoice '
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: save and submit invoice
      operationId: saveInvoice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewSimpleDTO'
      tags:
        - invoice-resource
      description: |
        save and submit invoice by invoice id 
        changes invoice status to active
  '/invoices/view/{id}':
    get:
      tags:
        - invoice-resource
      operationId: getInvoiceView
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewDTO'
      description: 'get single invoice by id '
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/banks/{id}':
    get:
      tags:
        - bank-resource
      operationId: getBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    delete:
      tags:
        - bank-resource
      operationId: deleteBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - bank-resource
      operationId: updateBank
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/BankDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/account-user/{id}':
    get:
      tags:
        - account-user-resource
      operationId: getAccountUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserDTO'
    delete:
      tags:
        - account-user-resource
      operationId: deleteAccountUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - account-user-resource
      operationId: updateAccountUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserDTO'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AccountUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /account-user:
    get:
      tags:
        - account-user-resource
      operationId: getAllAccountUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountUserDTO'
    post:
      tags:
        - account-user-resource
      operationId: createAccountUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserDTO'
    parameters: []
  /account-user/view:
    post:
      tags:
        - account-user-resource
      operationId: searchAccountUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserSearchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserContainer'
      summary: SearchAccountUsers
      description: 'search in all account users using all fields available '
    parameters: []
  /stores:
    get:
      tags:
        - store-resource
      operationId: getAllStores
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreDTO'
    post:
      tags:
        - store-resource
      operationId: createStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreDTO'
    parameters: []
  /stores/names:
    get:
      tags:
        - store-resource
      operationId: getAllStoresNames
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreNameDTO'
      description: 'return all store names with id '
    parameters: []
  /stores/storeItems:
    parameters: []
    post:
      summary: ''
      operationId: SetStoreItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreItemDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreItemIdOnlyDTO'
        description: store item contains item.id and store.id and qty required
      tags:
        - store-resource
      description: |-
        creates if not exsits or updates exsitsing store item 
        for selected item and store
  '/stores/item/{id}/storeItems':
    get:
      tags:
        - store-resource
      operationId: getAllStoresItemsForItem
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreItemDTO'
      description: return all store items qty in all stores item availabe in with item id
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/stores/item/{id}/storeItems/all':
    get:
      tags:
        - store-resource
      operationId: getAllStoresItemsInAllStoresForItem
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreItemDTO'
      description: return all store items qty in all stores with item id
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /monies:
    get:
      tags:
        - money-resource
      operationId: getAllMonies
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoneyDTO'
    post:
      tags:
        - money-resource
      operationId: createMoney
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMoneyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyDTO'
    parameters: []
  /monies/view:
    post:
      operationId: MoniesViewSearchPaginate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoniesSearchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoniesViewDTOContainer'
      description: invoice view dto search and pagination and sort request
      summary: 'Search Monies [ pagination , time , plaintext , sort ] { view model dto }'
      parameters: []
      tags:
        - money-resource
    parameters: []
  /items:
    get:
      tags:
        - item-resource
      operationId: getAllItems
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemDTO'
    post:
      tags:
        - item-resource
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters: []
  '/items/{id}/units':
    get:
      tags:
        - item-resource
      operationId: getItemUnits
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemUnitDTO'
      description: get all item units available
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/items/units/{id}/delete':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: ''
      operationId: deleteUnitItemById
      responses:
        '200':
          description: OK
      tags:
        - item-resource
  /items/view:
    parameters: []
    post:
      summary: ''
      operationId: ItemsViewSearchPaginate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemViewDTOContainer'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginationSearchModel'
        description: ''
      description: item view dto search and pagination and sort request
      tags:
        - item-resource
  /items/categories:
    get:
      tags:
        - item-resource
      operationId: getAllItemsCategories
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryItem'
      description: 'get categories from all items available '
    parameters: []
  '/items/pk/{PkId}':
    get:
      tags:
        - item-resource
      operationId: getItemByPk
      parameters: []
      description: 'get item by pk id '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: PkId
        in: path
        required: true
  '/items/id/{id}/before':
    get:
      tags:
        - item-resource
      operationId: getItemBeforeItemById
      parameters: []
      description: get the item before this item by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/items/id/{id}/after':
    get:
      tags:
        - item-resource
      operationId: getItemAfterItemById
      parameters: []
      description: get the item before this item by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /invoices:
    get:
      tags:
        - invoice-resource
      operationId: getAllInvoices
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceDTO'
    post:
      tags:
        - invoice-resource
      operationId: createInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
    parameters: []
  '/invoices/{id}/invoiceItems':
    get:
      tags:
        - invoice-resource
      operationId: getInvoiceItems
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItemDTO'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /invoices/view:
    post:
      tags:
        - invoice-resource
      operationId: InvoicesViewSearchPaginate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicesSearchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceViewDTOContainer'
      description: invoice view dto search and pagination and sort request
      summary: 'Search Invoices [ pagination , time , plaintext , sort ] { view model dto }'
      parameters: []
    parameters: []
  '/invoices/{kind}/create':
    get:
      tags:
        - invoice-resource
      operationId: initializeNewInvoice
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
      description: initialize a new Invoice
    parameters:
      - schema:
          type: string
        name: kind
        in: path
        required: true
  '/invoices/{id}/print':
    get:
      tags:
        - invoice-resource
      operationId: getPrintInvoiceObject
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePrintDTO'
      description: create a printable object of invoice print dto and global options used for user and general info
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/invoices/{id}/add':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: add invoice item to invocie
      operationId: AddInvoiceItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDTO'
      tags:
        - invoice-resource
      description: add item to invoice includes price qty etc ..
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceItemDTO'
  '/invoices/invoice-items/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: ''
      operationId: deleteInvoiceItemFromInvoice
      responses:
        '200':
          description: OK
      tags:
        - invoice-resource
      description: ''
    patch:
      summary: ''
      operationId: updateInvoiceItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItemViewDTO'
              examples:
                example-1:
                  value:
                    pk: string
                    id: string
                    unit: string
                    unitQtyIn: 0
                    unitQtyOut: 0
                    discount: 0
                    discountPer: 0
                    totalCost: 0
                    totalPrice: 0
                    qtyIn: 0
                    qtyOut: 0
                    netCost: 0
                    netPrice: 0
                    itemName: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItemUpdateDTO'
            examples:
              example-1:
                value:
                  id: string
                  unitPieces: 0
                  unitQty: 0
                  unitCost: 0
                  unitPrice: 0
                  discountPer: 0
                  discount: 0
                  qty: 0
                  cost: 0
                  price: 0
      description: update invoices invoice item
      tags:
        - invoice-resource
  /banks:
    get:
      tags:
        - bank-resource
      operationId: getAllBanks
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankDTO'
    post:
      tags:
        - bank-resource
      operationId: createBank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    parameters: []
  /register:
    post:
      tags:
        - account-resource
      operationId: registerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedUserVM'
        required: true
      responses:
        '201':
          description: Created
      description: ''
    parameters: []
  /admin/users:
    get:
      tags:
        - user-resource
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUserDTO'
    put:
      tags:
        - user-resource
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    post:
      tags:
        - user-resource
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    parameters: []
  /authenticate:
    get:
      tags:
        - account-resource
      operationId: isAuthenticated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - user-jwt-controller
      operationId: authorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginVM'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTToken'
    parameters: []
  /account:
    get:
      tags:
        - account-resource
      operationId: getAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    post:
      tags:
        - account-resource
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserDTO'
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /account/reset-password/init:
    post:
      tags:
        - account-resource
      operationId: requestPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /account/reset-password/finish:
    post:
      tags:
        - account-resource
      operationId: finishPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyAndPasswordVM'
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /account/change-password:
    post:
      tags:
        - account-resource
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
        required: true
      responses:
        '200':
          description: OK
    parameters: []
  /users:
    get:
      tags:
        - public-user-resource
      operationId: getAllPublicUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
    parameters: []
  /authorities:
    get:
      tags:
        - public-user-resource
      operationId: getAuthorities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    parameters: []
  '/admin/users/{login}':
    get:
      tags:
        - user-resource
      operationId: getUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
    delete:
      tags:
        - user-resource
      operationId: deleteUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    parameters:
      - schema:
          type: string
        name: login
        in: path
        required: true
  /activate:
    get:
      tags:
        - account-resource
      operationId: activateAccount
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    parameters: []
  /sys/settings:
    get:
      summary: Get System Options
      tags:
        - GLOBAL
        - server_settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSettings'
      operationId: getServerSettings
      description: 'get main system invoices , handlers ,  pos global options file '
    patch:
      summary: Update Global Application options
      operationId: updateServerSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSettings'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSettings'
      description: Update Global Application options
      tags:
        - GLOBAL
        - server_settings
    parameters: []
components:
  schemas:
    ItemDTO:
      type: object
      x-tags:
        - item
      properties:
        id:
          type: string
        pk:
          type: integer
          default: -1
        name:
          type: string
        barcode:
          type: string
        price1:
          type: string
        price2:
          type: string
        category:
          type: string
        qty:
          type: number
          minimum: 0
          exclusiveMinimum: false
          default: 0
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        itemUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ItemUnitDTO'
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        checkQty:
          type: boolean
          x-stoplight:
            id: tpadizn2r7ikw
          default: false
      required:
        - name
    ItemSimpleDTO:
      type: object
      x-tags:
        - item
      properties:
        id:
          type: string
        pk:
          type: integer
          default: -1
        name:
          type: string
        price1:
          type: string
        category:
          type: string
        qty:
          type: number
          minimum: 0
          exclusiveMinimum: false
          default: 0
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
      required:
        - name
      title: itemSimpleDTO
      description: 'simple model details for item '
    ItemViewDTO:
      type: object
      title: ItemViewDTO
      x-tags:
        - item
      description: It is used to display the item in the inventory view
      properties:
        id:
          type: string
        pk:
          type: integer
          default: -1
        name:
          type: string
        barcode:
          type: string
        price1:
          type: string
        price2:
          type: string
        category:
          type: string
        qty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        checkQty:
          type: boolean
          x-stoplight:
            id: aps5qtjk2ycmq
          default: false
      required:
        - name
    ItemUnitDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pieces:
          minimum: 0
          exclusiveMinimum: false
          type: number
        price:
          minimum: 0
          exclusiveMinimum: false
          type: number
        basic:
          type: boolean
          default: false
        cost:
          type: number
          minimum: 0
      required:
        - name
    StoreDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name
    StoreItemDTO:
      type: object
      properties:
        id:
          type: string
        qty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        item:
          $ref: '#/components/schemas/ItemSimpleDTO'
        store:
          $ref: '#/components/schemas/StoreNameDTO'
    StoreItemIdOnlyDTO:
      type: object
      properties:
        qty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        itemId:
          type: string
        storeId:
          type: string
      required:
        - qty
        - itemId
        - storeId
    PkDTO:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
          enum:
            - INVOICE
            - InvoicesItems
            - Money
        value:
          minimum: 0
          exclusiveMinimum: false
          type: number
    AccountUserDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        kind:
          type: string
          enum:
            - CUSTOMER
            - SUPPLIER
            - SALEMAN
        balanceIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        balanceOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        phone:
          type: string
        address:
          type: string
        address2:
          type: string
        created_date:
          type: string
          x-stoplight:
            id: fkvjy0iy6toz5
          format: date-time
        lastModifiedDate:
          type: string
          x-stoplight:
            id: 47mf7wx6v5ykd
          format: date-time
      required:
        - name
    AccountUserContainer:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/AccountUserDTO'
        total:
          type: integer
          x-stoplight:
            id: 6ahyus6b0314d
    AccountUserSearchModel:
      type: object
      properties:
        kind:
          type: string
          enum:
            - CUSTOMER
            - SUPPLIER
            - SALEMAN
          description: Kind of user searching for
        name:
          type: string
          x-stoplight:
            id: zcl7tzpt3hpb8
          description: name of user searching for
        phone:
          type: string
          x-stoplight:
            id: bmralpe6k2y2t
          description: phone of user searching for
        address:
          type: string
          x-stoplight:
            id: sga598k0q52ps
          description: adress of user searching for
        address_2:
          type: string
          x-stoplight:
            id: odvrflzt79ylv
          description: adress of user searching for
        page:
          type: integer
          x-stoplight:
            id: n0at7ilfmdf65
        size:
          type: integer
          x-stoplight:
            id: i1yxmpssqaim9
        id:
          type: string
          x-stoplight:
            id: yqnhnhx21456f
    CreateAccountUserDTO:
      type: object
      properties:
        name:
          type: string
        kind:
          type: string
          enum:
            - CUSTOMER
            - SUPPLIER
            - SALEMAN
          default: CUSTOMER
        balanceIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        balanceOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        phone:
          type: string
        address:
          type: string
        address2:
          type: string
      required:
        - name
    BankDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - name
    MoneyDTO:
      type: object
      properties:
        pk:
          type: string
        id:
          type: string
        kind:
          type: string
          enum:
            - PAYMENT
            - RECEIPT
        details:
          type: string
          x-stoplight:
            id: q36ihy0c6t89v
        moneyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        moneyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        bank:
          $ref: '#/components/schemas/BankDTO'
        item:
          $ref: '#/components/schemas/ItemDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        created_date:
          type: string
          format: date-time
    CreateMoneyDTO:
      type: object
      x-stoplight:
        id: 2ekbdrjsummeb
      description: dto to create new money
      properties:
        kind:
          type: string
          enum:
            - PAYMENT
            - RECEIPT
        details:
          type: string
          x-stoplight:
            id: 1arzmtuhggam3
        moneyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        moneyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
          default: 0
        bankId:
          type: string
          x-stoplight:
            id: mwz9r5h5p8nlx
        accountId:
          type: string
          x-stoplight:
            id: 6ub77pfec1wj6
      required:
        - kind
    InvoiceDTO:
      type: object
      properties:
        pk:
          type: string
          description: 'Invoice pk '
        id:
          type: string
        kind:
          type: string
          enum:
            - SALE
            - PURCHASE
            - ADJUST
            - TRANSFER
            - SALEQUOTE
            - RETURNPUR
            - RETURNSALE
            - COMPONENT
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netResult:
          type: number
        expenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        expensesType:
          type: string
        bank:
          $ref: '#/components/schemas/BankDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        invoiceItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemDTO'
        created_by:
          type: string
        created_date:
          type: string
          format: date-time
        deferred:
          type: boolean
          x-stoplight:
            id: 7skmkczs1v9fp
    InvoiceViewDTO:
      type: object
      x-examples:
        example-1:
          pk: string
          id: string
          kind: SALE
          totalCost: 0
          totalPrice: 0
          discountPer: 0
          discount: 0
          additions: 0
          additionsType: string
          netCost: 0
          netPrice: 0
          expenses: 0
          expensesType: string
          bank:
            id: string
            name: string
          item:
            id: string
            pk: -1
            name: string
            barcode: string
            price1: string
            price2: string
            category: string
            qty: 0
            cost: 0
            itemUnits:
              - id: string
                name: string
                pieces: 0
                price: 0
                basic: false
            createdBy: string
            createdDate: '2019-08-24T14:15:22Z'
          account:
            id: string
            name: string
            kind: CUSTOMER
            balanceIn: 0
            balanceOut: 0
            phone: string
            address: string
            address2: string
          invoiceItems:
            - pk: string
              id: string
              unit: string
              unitQtyIn: 0
              unitQtyOut: 0
              discount: 0
              discountPer: 0
              totalCost: 0
              totalPrice: 0
              qtyIn: 0
              qtyOut: 0
              netCost: 0
              netPrice: 0
              itemName: string
          created_by: string
          created_date: '2019-08-24T14:15:22Z'
          last_modified_by: string
          last_modified_date: '2019-08-24T14:15:22Z'
          invoiceItemsCount: string
      properties:
        pk:
          type: string
          description: 'Invoice pk '
        id:
          type: string
        kind:
          type: string
          enum:
            - SALE
            - PURCHASE
            - ADJUST
            - TRANSFER
            - SALEQUOTE
            - RETURNPUR
            - RETURNSALE
            - COMPONENT
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netResult:
          type: number
        expenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        expensesType:
          type: string
        bank:
          $ref: '#/components/schemas/BankDTO'
        item:
          $ref: '#/components/schemas/ItemDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        invoiceItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemViewDTO'
        created_by:
          type: string
        created_date:
          type: string
          format: date-time
        last_modified_by:
          type: string
        last_modified_date:
          type: string
          format: date-time
        invoiceItemsCount:
          type: string
        deferred:
          type: boolean
          x-stoplight:
            id: w655ialp3egre
    InvoiceViewSimpleDTO:
      type: object
      properties:
        pk:
          type: string
          description: 'Invoice pk '
        id:
          type: string
        kind:
          type: string
          enum:
            - SALE
            - PURCHASE
            - ADJUST
            - TRANSFER
            - SALEQUOTE
            - RETURNPUR
            - RETURNSALE
            - COMPONENT
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        netPrice:
          type: number
          minimum: 0
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netResult:
          type: number
        created_by:
          type: string
        ItemsCount:
          type: string
        created_date:
          type: string
          format: date-time
        last_modified_by:
          type: string
        last_modified_date:
          type: string
          format: date-time
        bank:
          $ref: '#/components/schemas/BankDTO'
        item:
          $ref: '#/components/schemas/ItemSimpleDTO'
        account:
          $ref: '#/components/schemas/AccountUserDTO'
        deferred:
          type: boolean
          x-stoplight:
            id: esn8m7uagipey
    InvoiceUpdateDTO:
      type: object
      description: |-
        A model that contains all the elements that can be modified 
        in the invoice by requesting the modification
      title: Invoice update DTO
      properties:
        id:
          type: string
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additions:
          minimum: 0
          exclusiveMinimum: false
          type: number
        additionsType:
          type: string
        expenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        expensesType:
          type: string
        bankId:
          type: string
        accountId:
          type: string
        created_date:
          type: string
          format: date-time
        storeId:
          type: string
          x-stoplight:
            id: 48kcjll1tq5dt
        deferred:
          type: boolean
          x-stoplight:
            id: mv94k3lxb22ol
    InvoiceItemDTO:
      type: object
      properties:
        pk:
          type: string
        id:
          type: string
        unit:
          type: string
        unitPieces:
          minimum: 0
          exclusiveMinimum: false
          type: number
        userQty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        price:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        item:
          $ref: '#/components/schemas/ItemSimpleDTO'
    InvoiceItemUpdateDTO:
      type: object
      properties:
        id:
          type: string
        unitPieces:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qty:
          minimum: 0
          exclusiveMinimum: false
          type: number
        cost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        price:
          minimum: 0
          exclusiveMinimum: false
          type: number
    InvoiceItemViewDTO:
      type: object
      properties:
        pk:
          type: string
        id:
          type: string
        unit:
          type: string
        unitQtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        unitQtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discountPer:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        totalCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyIn:
          minimum: 0
          exclusiveMinimum: false
          type: number
        qtyOut:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netCost:
          minimum: 0
          exclusiveMinimum: false
          type: number
        netPrice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        itemName:
          type: string
    CreateInvoiceItemDTO:
      type: object
      title: CreateInvoiceItemDTO
      description: model for creating new invoice items
      properties:
        id:
          type: string
        itemId:
          type: string
        unitId:
          type: string
        qty:
          type: number
          minimum: 0
          exclusiveMinimum: false
          default: 0
        price:
          type: number
          default: 0
          minimum: 0
      required:
        - itemId
    AdminUserDTO:
      required:
        - login
      type: object
      properties:
        id:
          type: string
        login:
          maxLength: 50
          minLength: 1
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
    ManagedUserVM:
      required:
        - login
      type: object
      properties:
        id:
          type: string
        login:
          maxLength: 50
          minLength: 1
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
    LoginVM:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 1
          type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
        rememberMe:
          type: boolean
    JWTToken:
      type: object
      properties:
        id_token:
          type: string
    User:
      required:
        - login
      type: object
      properties:
        id:
          type: string
        login:
          maxLength: 50
          minLength: 1
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        resetDate:
          type: string
          format: date-time
    KeyAndPasswordVM:
      type: object
      properties:
        key:
          type: string
        newPassword:
          type: string
    PasswordChangeDTO:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
    CategoryItem:
      title: CategoryItem
      x-stoplight:
        id: c3hb648r6gfz2
      type: object
      properties:
        name:
          type: string
    PaginationSearchModel:
      title: PaginationSearchModel
      x-stoplight:
        id: kdba1ibk06p8b
      type: object
      properties:
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 10
        sortField:
          type: string
        sortOrder:
          type: string
        searchText:
          type: string
    InvoicesSearchModel:
      title: InvoicesSearchModel
      x-stoplight:
        id: kdba1ibk06p8b
      type: object
      description: 'search with pagination , plain text , date [ from , to ]'
      properties:
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 10
        sortField:
          type: string
        sortOrder:
          type: string
        searchText:
          type: string
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        kind:
          type: string
          enum:
            - ALL
            - SALE
            - PURCHASE
    MoniesSearchModel:
      title: MoniesSearchModel
      x-stoplight:
        id: kdba1ibk06p8b
      type: object
      description: 'search Monies with pagination , plain text , date [ from , to ] also account and bank'
      properties:
        id:
          type: string
          description: search for single money instance
          default: null
        pk:
          type: string
          default: null
        page:
          type: integer
          default: 0
        size:
          type: integer
          default: 100
        sortField:
          type: string
          default: createdDate
        sortOrder:
          type: string
          default: DESC
          enum:
            - DESC
            - ASC
        kind:
          type: string
          description: text to seach for
          enum:
            - RECEIPT
            - PAYMENT
          default: null
        dateFrom:
          type: string
          description: date form to seach for or null
          default: null
        dateTo:
          type: string
          description: date to to seach for or null
          default: null
        accountId:
          type: string
          default: null
        bankId:
          type: string
          default: null
        details:
          type: string
          x-stoplight:
            id: 7v24ok939m287
          default: null
    ItemViewDTOContainer:
      title: ItemViewDTOContainer
      x-stoplight:
        id: dpnzre10uswhm
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ItemViewDTO'
        total:
          type: integer
    InvoiceViewDTOContainer:
      title: InvoiceViewDTOContainer
      x-stoplight:
        id: dpnzre10uswhm
      type: object
      description: ''
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceViewSimpleDTO'
        total:
          type: integer
        totalCost:
          type: number
        totalPrice:
          type: number
        netCost:
          type: number
        netPrice:
          type: number
        netResult:
          type: number
        totalDiscount:
          type: number
    MoniesViewDTOContainer:
      title: MoniesViewDTOContainer
      x-stoplight:
        id: dpnzre10uswhm
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/MoneyDTO'
        totalMoneyIn:
          type: integer
        totalMoneyOut:
          type: number
        total:
          type: integer
          x-stoplight:
            id: kzupbqzgmizzz
          default: 0
    StoreNameDTO:
      title: StoreNameDTO
      x-stoplight:
        id: 1rng5h6x237wc
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    SysOptions:
      title: SysOptions
      x-stoplight:
        id: zyfwknmaoo5pi
      type: object
      x-examples:
        example-1:
          appName: اسم الشركة
          appVersion: 1.0.0.0
          reportFilesDir: KONSOL_REPORTS
          contactInfo:
            VendorContactName: اسم صاحب العمل
            VendorPhone: هاتف صاحب العمل
            VendorAddress: عنوان صاحب العمل
            VendorCity: 'مدينة '
            VendorCountry: دولة
            VendorWebsite: موقع
            VendorEmail: بريد
          options:
            salesInvoiceOptions:
              selectedInvoiceReport: string
              isDefault: true
      description: 'Main Application options and settings '
      properties:
        appName:
          type: string
          default: اسم الشركة
          description: 'Main Application name '
        appVersion:
          type: string
          default: 1.0.0.0
          description: current application version
        contactInfo:
          $ref: '#/components/schemas/ContactInfo'
        settings:
          $ref: '#/components/schemas/GlobalSettings'
        showTimer:
          type: boolean
          default: true
    InvoicePrintDTO:
      title: InvoicePrintDTO
      x-stoplight:
        id: undra196b9cyo
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceDTO'
        global_info:
          $ref: '#/components/schemas/ContactInfo'
    ItemsPrintDTO:
      title: InvoicePrintDTO
      x-stoplight:
        id: undra196b9cyo
      type: object
      properties:
        global_info:
          $ref: '#/components/schemas/ContactInfo'
        item:
          $ref: '#/components/schemas/ItemViewDTO'
      description: ''
    ContactInfo:
      title: ContactInfo
      x-stoplight:
        id: gkeun9pxkdpgc
      type: object
      description: |-
        main app owner contact info
         [ used in print designer ]
      properties:
        VendorContactName:
          type: string
          default: اسم صاحب العمل
        VendorPhone:
          type: string
          default: هاتف صاحب العمل
        VendorAddress:
          type: string
          default: عنوان صاحب العمل
        VendorCity:
          type: string
          default: 'مدينة '
        VendorCountry:
          type: string
          default: دولة
        VendorWebsite:
          type: string
          default: موقع
        VendorEmail:
          type: string
          default: بريد
      x-internal: false
    GlobalSettings:
      title: GlobalSettings
      x-stoplight:
        id: 7djw1ifd9eagq
      type: object
      x-examples:
        example-1:
          salesInvoiceOptions:
            selectedInvoiceReport: Default
            autoPrintAfterSave: true
            printPreview: false
            userReportFile: true
            selectedPrinterName: default
            checkItemQty: true
          reportFilesDir: reports
          selectedStoreId: default
          mainPrinterName: default
          cultureName: ar-EG
      properties:
        salesInvoiceOptions:
          type: object
          properties:
            selectedInvoiceReport:
              type: string
              default: Default
              description: selected file for invoice to print UI_OPTION
            autoPrintAfterSave:
              type: boolean
              default: true
              description: send print order directly to printer after saving  UI_OPTION
            printPreview:
              type: boolean
              default: false
              description: show preview after saving invoice UI_OPTION
            userReportFile:
              type: boolean
            selectedPrinterName:
              type: string
              default: default
              description: selected printer name to send print file to UI_OPTION
            checkItemQty:
              type: boolean
              default: true
              description: check if item has required qty in store BE_OPTION
            updateItemQtyAfterSave:
              type: boolean
              default: true
              description: updates item qty saving invoice add/subtract BE_OPTION
            report_page_name:
              type: string
              default: sale
        reportFilesDir:
          type: string
          default: reports
          description: selected folder for report files
        selectedStoreId:
          type: string
          default: default
          description: selected store to add and subtract items qty from after saving invoice BE_OPTION
        mainPrinterName:
          type: string
          default: default
          description: selected printer name to send print file to UI_OPTION
        cultureName:
          type: string
          default: ar-EG
          description: 'culture language for currency persentation in ui / table / print / preview '
        ItemsOptions:
          type: object
          properties:
            selectedReport:
              type: string
              default: Default
            report_page_name:
              type: string
              default: items
        purchaseInvoiceOptions:
          type: object
          properties:
            selectedInvoiceReport:
              type: string
              default: Default
            autoPrintAfterSave:
              type: boolean
              default: true
            printPreview:
              type: boolean
              default: true
            userReportFile:
              type: string
            selectedPrinterName:
              type: string
              default: default
            updateItemQtyAfterSave:
              type: boolean
              default: true
            report_page_name:
              type: string
              default: pur
        report_page_names_List:
          type: array
          items:
            type: string
            enum:
              - sale
              - pur
              - items
              - invoiceReport
            default: 'sale,pur,items,invoiceReport'
    KonsolGridBand:
      title: KonsolGridBand
      x-stoplight:
        id: pg1ha7lkm12tk
      type: object
      x-examples: {}
      description: ''
      properties:
        caption:
          type: string
        visible:
          type: boolean
          default: true
        visibleCustomization:
          type: boolean
          default: true
        columns:
          type: array
          items:
            type: string
    KonsolGridColumn:
      title: KonsolGridColumn
      x-stoplight:
        id: pg1ha7lkm12tk
      type: object
      x-examples: {}
      description: ''
      properties:
        fieldName:
          type: string
          default: name
        capition:
          type: string
          default: capition
        visible:
          type: boolean
          default: true
        visibleCustomization:
          type: boolean
          default: true
        description:
          type: string
        displayFormat:
          type: string
        editable:
          type: boolean
          default: false
        foreColor:
          type: string
        index:
          type: integer
    KonsolGridOptions:
      title: GridOptions
      x-stoplight:
        id: orxnk6df31kl4
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          default: default
        allowBands:
          type: boolean
          default: true
        showSearch:
          type: boolean
          default: false
        showGroupSearch:
          type: boolean
          default: false
        sortField:
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/KonsolGridColumn'
        bands:
          type: array
          items:
            $ref: '#/components/schemas/KonsolGridBand'
        rowHeight:
          type: integer
          default: 30
        showCurrency:
          type: boolean
          default: true
    ServerSettings:
      title: ServerSettings
      x-stoplight:
        id: c57j8t25xgkyp
      type: object
      properties:
        id:
          type: string
        MAIN_SELECTED_STORE_ID:
          type: string
          x-stoplight:
            id: jojbl025jj1wb
          default: default
        MAIN_SELECTED_BANK_ID:
          type: string
          x-stoplight:
            id: otne28m01ul8p
          default: default
        SALES_CHECK_ITEM_QTY:
          type: boolean
          x-stoplight:
            id: l5hesnrihtlft
          default: true
        SALES_UPDATE_ITEM_QTY_AFTER_SAVE:
          type: boolean
          x-stoplight:
            id: jubor8k789qix
          default: true
        PURCHASE_UPDATE_ITEM_QTY_AFTER_SAVE:
          type: boolean
          x-stoplight:
            id: gldsozrb9xp7h
          default: true
